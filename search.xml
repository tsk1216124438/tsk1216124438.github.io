<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一篇文章</title>
    <url>/2020/04/21/one/</url>
    <content><![CDATA[<h2 id="hugo博客搭建"><a href="#hugo博客搭建" class="headerlink" title="hugo博客搭建"></a>hugo博客搭建</h2><h3 id="下载安装hugo"><a href="#下载安装hugo" class="headerlink" title="下载安装hugo"></a>下载安装hugo</h3><p>首先下载hugo<a href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener">hugo下载地址</a>下载好解压安装  </p>
<a id="more"></a>
<h3 id="hugo生成本地博客"><a href="#hugo生成本地博客" class="headerlink" title="hugo生成本地博客"></a>hugo生成本地博客</h3><p>在hugo文件下cmd打开控制台，然后输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo new site hugo_blog（自己定义博客名）</span><br></pre></td></tr></table></figure>
<p>然后切换到生成的hugo_blog(博客的根目录)进行下一步操作</p>
<h3 id="设置博客主题"><a href="#设置博客主题" class="headerlink" title="设置博客主题"></a>设置博客主题</h3><p><a href="https://themes.gohugo.io/" target="_blank" rel="noopener">hugo主题下载地址</a>在hugo_blog目录下的themes执行git clone (主题的git仓库地址)<br>新下载的主题就存放到hugo_blog目录下的themes文件夹下</p>
<h4 id="新建文章及本地启动博客"><a href="#新建文章及本地启动博客" class="headerlink" title="新建文章及本地启动博客"></a>新建文章及本地启动博客</h4><p>在博客根目录cmd进入控制台输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo new day01.md</span><br></pre></td></tr></table></figure>
<p>创建新的文档，写入内容<br>本地启动，输入启动命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo server</span><br></pre></td></tr></table></figure>
<p>复制生成的本地网址<a href="http://localhost:1313/到浏览器中，查看站点是否运行成功" target="_blank" rel="noopener">http://localhost:1313/到浏览器中，查看站点是否运行成功</a><br>注意：每次修改完md文件中的内容后，需要重新在cmd中输入命令hugo server    </p>
<h3 id="将博客部署到服务器"><a href="#将博客部署到服务器" class="headerlink" title="将博客部署到服务器"></a>将博客部署到服务器</h3><p>打开gitee 新建一个git仓库<br>需要注意：在是否开源要选择“公开” 否则别人无法访问<br>配置config.toml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#指定主题</span><br><span class="line">theme &#x3D; &quot;(替换成你下载好的主题名)&quot;</span><br></pre></td></tr></table></figure>
<p>在博客根目录下输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo</span><br></pre></td></tr></table></figure>
<p>执行完毕后，会在hugo文件夹下自动生成一个public文件夹。<br>打开博客目录，cmd进入控制台按照git提示命令依此输入命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd public</span><br><span class="line">git init</span><br><span class="line">git add -A</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin (你的git仓库地址)</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>提交成功  </p>
<h3 id="开启码云的page服务"><a href="#开启码云的page服务" class="headerlink" title="开启码云的page服务"></a>开启码云的page服务</h3><p>点击启动即可</p>
]]></content>
      <categories>
        <category>hugo</category>
      </categories>
  </entry>
  <entry>
    <title>第三篇文章</title>
    <url>/2020/04/23/day2/</url>
    <content><![CDATA[<h2 id="Django后端"><a href="#Django后端" class="headerlink" title="Django后端"></a>Django后端</h2><p>后端实现简单用户名去重,注册密码md5加密  </p>
<ul>
<li><p>先导入model中创建表  *号代表所有</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from myapp.models import *</span><br></pre></td></tr></table></figure>
</li>
<li><p>再导入hash库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#导入加密库</span><br><span class="line">import hashlib</span><br></pre></td></tr></table></figure></li>
<li><p>生成md5加密方法视图</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># md5加密方法</span><br><span class="line">def make_password(mypass):</span><br><span class="line"></span><br><span class="line">    # 生成md5对象</span><br><span class="line">    md5 &#x3D; hashlib.md5()</span><br><span class="line"></span><br><span class="line">    # 转码操作</span><br><span class="line">    mypass_utf8 &#x3D; str(mypass).encode(encoding&#x3D;&quot;utf-8&quot;)</span><br><span class="line"></span><br><span class="line">    # 加密操作</span><br><span class="line">    md5.update(mypass_utf8)</span><br><span class="line"></span><br><span class="line">    # 返回密文</span><br><span class="line">    return md5.hexdigest()</span><br></pre></td></tr></table></figure></li>
<li><p>注册视图  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 注册接口</span><br><span class="line">class Register(APIView):</span><br><span class="line">    def get(self,request):</span><br><span class="line"></span><br><span class="line">        # 接收参数</span><br><span class="line">        username &#x3D; request.GET.get(&#39;username&#39;,None)</span><br><span class="line">        password &#x3D; request.GET.get(&#39;password&#39;,None)</span><br><span class="line"></span><br><span class="line">        # 排重</span><br><span class="line">        user &#x3D; User.objects.filter(username&#x3D;username).first()</span><br><span class="line"></span><br><span class="line">        if user:</span><br><span class="line">            return Response(&#123;</span><br><span class="line">                &#39;code&#39;: 400,</span><br><span class="line">                &#39;message&#39;:&#39;用户名重复&#39;</span><br><span class="line">            &#125;)</span><br><span class="line">        # 入库操作</span><br><span class="line">        user &#x3D; User(username&#x3D;username,password&#x3D;make_password(password))</span><br><span class="line">        # 保存结果</span><br><span class="line">        user.save()</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;code&#39;:200,</span><br><span class="line">            &#39;message&#39;:&#39;注册成功&#39;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Vue前端"><a href="#Vue前端" class="headerlink" title="Vue前端"></a>Vue前端</h2><p>前端使用正则判断手机号码是否合法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">		&lt;div&gt;</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line">			&lt;div&gt;</span><br><span class="line">				&lt;table&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							用户名:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;username&quot; placeholder&#x3D;&quot;请输入用户名&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							密码:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;password&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							手机号:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;phone&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;Button @click&#x3D;&quot;submit&quot; color&#x3D;&quot;blue&quot;&gt;提交&lt;&#x2F;Button&gt;</span><br><span class="line">							&lt;Button @click&#x3D;&quot;reginfo&quot; color&#x3D;&quot;red&quot;&gt;重置&lt;&#x2F;Button&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;											</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">				&lt;&#x2F;table&gt;</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">import myheader from &#39;.&#x2F;myheader&#39;</span><br><span class="line">import myfooter from &#39;.&#x2F;myfooter&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">	  msg: &quot;这是一个变量&quot;,</span><br><span class="line">	  &#x2F;&#x2F;表单数据</span><br><span class="line">	  username:&#39;&#39;,</span><br><span class="line">	  password:&#39;&#39;,</span><br><span class="line">	  phone:&#39;&#39;,</span><br><span class="line">	  &#x2F;&#x2F;面包屑导航变量</span><br><span class="line">	  datas:[&#123;title:&#39;首页&#39;,route:&#123;name:&#39;index&#39;&#125;&#125;,&#123;title:&#39;注册页面&#39;&#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F;注册组件标签</span><br><span class="line">  components:&#123;</span><br><span class="line">	  &#39;myheader&#39;:myheader,</span><br><span class="line">	  &#39;myfooter&#39;:myfooter,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;重置按钮</span><br><span class="line">	  reginfo:function()&#123;</span><br><span class="line">		  this.username &#x3D; &quot;&quot;;</span><br><span class="line">		  this.password &#x3D; &quot;&quot;;</span><br><span class="line">		  this.phone &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">	  &#125;,</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;定义提交事件</span><br><span class="line">	  submit:function()&#123;</span><br><span class="line"></span><br><span class="line">		  &#x2F;&#x2F;非空验证</span><br><span class="line">		  if(this.username&#x3D;&#x3D; &#39;&#39;)&#123;</span><br><span class="line"></span><br><span class="line">			  this.$Message(&#39;您没有输入用户名&#39;)</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line">		  if(this.password&#x3D;&#x3D;&#39;&#39;)&#123;</span><br><span class="line">			  this.$Message(&#39;密码不能为空&#39;)</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line">          &#x2F;&#x2F;手机号码使用正则匹配</span><br><span class="line">		  if (!&#x2F;^((1[3,5,8][0-9])|(14[5,7])|(17[0,6,7,8])|(19[7]))\d&#123;8&#125;$&#x2F;.test(this.phone)) &#123;</span><br><span class="line">                alert(&#39;手机号格式不正确&#39;);</span><br><span class="line">                return false;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">		  &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;register&#x2F;&#39;,&#123;params:&#123;username:this.username,password:this.password,phone:this.phone&#125;&#125;).then((result)&#x3D;&gt;&#123;</span><br><span class="line">			  console.log(result);</span><br><span class="line">        this.$Message(result.data.message)</span><br><span class="line">		  &#125;)</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<p>前端组件化操作：<br>将需要嵌套的组件导入<br><img src="https://i.loli.net/2020/04/23/HeKoOyqUE6mAMfi.png" alt></p>
</li>
</ul>
<p>然后在页面注册组件标签</p>
<p><img src="https://i.loli.net/2020/04/23/q6N8mjrD2oPbpVx.png" alt></p>
<p>最后在<template>标签里引入</template></p>
<p><img src="https://i.loli.net/2020/04/23/eiVjcHXzurnRhDw.png" alt></p>
<p>面包屑导航</p>
<p><img src="https://i.loli.net/2020/04/23/DRFh5paEkucT8Gd.png" alt></p>
<p>最后定义面包屑变量</p>
<p><img src="https://i.loli.net/2020/04/23/6kiDMJXysA7Pomw.png" alt></p>
]]></content>
      <categories>
        <category>Django+Vue注册</category>
      </categories>
  </entry>
  <entry>
    <title>第二篇文章</title>
    <url>/2020/04/22/day1/</url>
    <content><![CDATA[<h2 id="vue语法"><a href="#vue语法" class="headerlink" title="vue语法"></a>vue语法</h2><p>Vue.js是前端的主流框架之一，和angular、react.js一起，并成为前端三大主流框架   </p>
<a id="more"></a>
<h4 id="vue常用属性："><a href="#vue常用属性：" class="headerlink" title="vue常用属性："></a>vue常用属性：</h4><p>data: 就是vue的model，是存放数据的，属性值是一个对象或者是一个函数，在组件中的data是一个函数<br>methods: 是vue中的事件方法  </p>
<h4 id="Vue的基础语法介绍"><a href="#Vue的基础语法介绍" class="headerlink" title="Vue的基础语法介绍"></a>Vue的基础语法介绍</h4><ul>
<li>v-model:主要是在表单元素的双向数据绑定中使用。比如文本框、下拉框、单选、复选、textarea等等。因为v-model是双向绑定的，<br>所以文本框输入以后，模型也会发生改变。反之模型改变了文本框也会改变。  </li>
<li>v-text：主要用于文本的渲染。</li>
<li>v-show：控制显示隐藏。不用艺v-if，使用v-show的情况下，dom是存在的。v-show通过指定CSS样式给元素添加display block或者display none进行控制。  </li>
<li>v-if：控制显示隐藏。如果if不成立，则整个dom不进行渲染，即不存在。  </li>
<li>v-bind：绑定属性。给一个dom元素添加属性。比如：在做图片的渲染过程中，如果图片的src地址是动态的，那么就可以利用v-bind去绑定src属性来实现src的赋值。  </li>
<li>v-for：循环。主要用于表格</li><li> 标签，去循环一个数组。  </li>
<li>v-on：事件绑定。(v-on:同等于@)  </li>
<li>filter : 过滤器。格式化数据。如后台返回金额19数字。页面显示：￥19.00元。  </li>
</ul>
<h2 id="Django配置setting详解"><a href="#Django配置setting详解" class="headerlink" title="Django配置setting详解"></a>Django配置setting详解</h2><h4 id="项目配置文件–setting-py"><a href="#项目配置文件–setting-py" class="headerlink" title="项目配置文件–setting.py"></a>项目配置文件–setting.py</h4><p>项目的相对路径，启动服务的时候会运行这个文件所在路径的manage.py<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASE_DIR &#x3D; os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br></pre></td></tr></table></figure><br>安全密钥<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SECRET_KEY &#x3D; &#39;l&amp;!v_npes(!j82+x(44vt+h&amp;#ag7io2x&amp;shnf*9^8fv0d63!0r&#39;</span><br></pre></td></tr></table></figure><br>是否开启Debug</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DEBUG &#x3D; True</span><br></pre></td></tr></table></figure>
<p>允许访问的主机ip，可以用通配符*<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALLOWED_HOSTS &#x3D; []</span><br></pre></td></tr></table></figure><br>用来注册App 前6个是django自带的应用</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS &#x3D; [</span><br><span class="line">    &#39;django.contrib.admin&#39;,</span><br><span class="line">    &#39;django.contrib.auth&#39;,</span><br><span class="line">    &#39;django.contrib.contenttypes&#39;,</span><br><span class="line">    &#39;django.contrib.sessions&#39;,</span><br><span class="line">    &#39;django.contrib.messages&#39;,</span><br><span class="line">    &#39;django.contrib.staticfiles&#39;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>中间件 ,需要加载的中间件。比如在请求前和响应后根据规则去执行某些代码的方法<br>前后端跨域需要在这里配置中间件<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MIDDLEWARE &#x3D; [</span><br><span class="line">    &#39;django.middleware.security.SecurityMiddleware&#39;,</span><br><span class="line">    &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,</span><br><span class="line">    &#39;django.middleware.common.CommonMiddleware&#39;,</span><br><span class="line">    &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,</span><br><span class="line">    &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,</span><br><span class="line">    &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,</span><br><span class="line">    &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br>数据库配置 默认的数据库为sqlite,这里是mysql<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DATABASES &#x3D; &#123;</span><br><span class="line">   &#39;default&#39;: &#123;</span><br><span class="line">          &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;, #数据库引擎</span><br><span class="line">          &#39;NAME&#39;: &#39;md&#39;,                       #数据库名</span><br><span class="line">          &#39;USER&#39;: &#39;root&#39;,                       #用户名</span><br><span class="line">          &#39;PASSWORD&#39;: &#39;root&#39;,                   #密码</span><br><span class="line">          &#39;HOST&#39;: &#39;&#39;,                           #数据库主机，默认为localhost</span><br><span class="line">          &#39;PORT&#39;: &#39;&#39;,                           #数据库端口，MySQL默认为3306</span><br><span class="line">          &#39;OPTIONS&#39;: &#123;</span><br><span class="line">             &#39;autocommit&#39;: True,</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>数据库迁移</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">生成迁移文件</span><br><span class="line">python manage.py makemigrations</span><br><span class="line"></span><br><span class="line">数据库文件生成</span><br><span class="line">python manage.py migrate </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行</span><br><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure>

<p>语言设置 默认英语， 中文是zh-hans<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LANGUAGE_CODE &#x3D; &#39;en-us&#39;</span><br></pre></td></tr></table></figure><br>时区设置，中国的是：Asia/Shanghai<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TIME_ZONE &#x3D; &#39;UTC&#39;</span><br></pre></td></tr></table></figure><br>静态文件路径<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">STATIC_URL &#x3D; &#39;&#x2F;static&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS&#x3D;[</span><br><span class="line">     os.path.join(BASE_DIR,&#39;static&#39;)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">#定义上传文件夹的路径</span><br><span class="line">UPLOAD_ROOT &#x3D; os.path.join(BASE_DIR,&#39;static&#x2F;upload&#39;)</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>Django、vue基础</category>
      </categories>
  </entry>
  <entry>
    <title>第四篇文章</title>
    <url>/2020/04/24/day3/</url>
    <content><![CDATA[<h2 id="Django-Vue实现登录功能"><a href="#Django-Vue实现登录功能" class="headerlink" title="Django+Vue实现登录功能"></a>Django+Vue实现登录功能</h2><h3 id="Django后端"><a href="#Django后端" class="headerlink" title="Django后端"></a>Django后端</h3>  <a id="more"></a>
<p>后端接口<br><img src="https://i.loli.net/2020/04/24/CB69N3uk7RnzJOL.png" alt><br>后端路由<br><img src="https://i.loli.net/2020/04/24/53rYURxP689Ifhy.png" alt></p>
<h2 id="Vue前端"><a href="#Vue前端" class="headerlink" title="Vue前端"></a>Vue前端</h2><p>前端页面</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;table&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    用户名:</span><br><span class="line">                &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;username&quot; placeholder&#x3D;&quot;请输入用户名&quot;&gt;</span><br><span class="line">                &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;&#x2F;tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    密码:</span><br><span class="line">                &lt;&#x2F;td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    &lt;input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;password&quot;&gt;</span><br><span class="line">                &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;&#x2F;tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;&lt;&#x2F;td&gt;</span><br><span class="line">                &lt;td&gt;</span><br><span class="line">                    &lt;Button @click&#x3D;&quot;submit&quot; color&#x3D;&quot;blue&quot;&gt;登录&lt;&#x2F;Button&gt;</span><br><span class="line">                    &lt;Button @click&#x3D;&quot;reginfo&quot; color&#x3D;&quot;red&quot;&gt;重置&lt;&#x2F;Button&gt;</span><br><span class="line">                &lt;&#x2F;td&gt;								</span><br><span class="line">            &lt;&#x2F;tr&gt;				</span><br><span class="line">        &lt;&#x2F;table&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">	  msg: &quot;这是一个变量&quot;,</span><br><span class="line">	  &#x2F;&#x2F;表单数据</span><br><span class="line">	  username:&#39;&#39;,</span><br><span class="line">	  password:&#39;&#39;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">	  &#x2F;&#x2F;重置按钮</span><br><span class="line">	  reginfo:function()&#123;</span><br><span class="line">		  this.username &#x3D; &quot;&quot;;</span><br><span class="line">		  this.password &#x3D; &quot;&quot;;</span><br><span class="line">	  &#125;,</span><br><span class="line">	  &#x2F;&#x2F;定义提交事件</span><br><span class="line">	  submit:function()&#123;</span><br><span class="line">		  &#x2F;&#x2F;非空验证</span><br><span class="line">		  if(this.username&#x3D;&#x3D; &#39;&#39;)&#123;</span><br><span class="line">			  this.$Message(&#39;您没有输入用户名&#39;)</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line">		  if(this.password&#x3D;&#x3D;&#39;&#39;)&#123;</span><br><span class="line">			  this.$Message(&#39;密码不能为空&#39;)</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line">		  &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;login&#x2F;&#39;,&#123;params:&#123;username:this.username,password:this.password,password2:this.password&#125;&#125;).then((result)&#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;登录成功</span><br><span class="line">			localStorage.setItem(&quot;username&quot;,result.data.username)</span><br><span class="line">			localStorage.setItem(&quot;uid&quot;,result.data.uid)</span><br><span class="line">			  console.log(result);</span><br><span class="line">			this.$Message(result.data.message)</span><br><span class="line">			if(result.data.code&#x3D;&#x3D;200)&#123;</span><br><span class="line">					&#x2F;&#x2F;跳转页面</span><br><span class="line">				this.$router.push(&#39;&#x2F;&#39;)</span><br><span class="line">			&#125;</span><br><span class="line">		  &#125;)</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<p>在router文件夹下中的index.js注册组件</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import login from &#39;@&#x2F;components&#x2F;login&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">var routes &#x3D; [</span><br><span class="line">        &#123;</span><br><span class="line">          path:&#39;&#x2F;login&#39;,</span><br><span class="line">          name:&#39;login&#39;,</span><br><span class="line">          component:login</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>Django+Vue登录</category>
      </categories>
  </entry>
  <entry>
    <title>第五篇文章</title>
    <url>/2020/04/25/day4/</url>
    <content><![CDATA[<h2 id="Django-Vue实现登录图形验证"><a href="#Django-Vue实现登录图形验证" class="headerlink" title="Django+Vue实现登录图形验证"></a>Django+Vue实现登录图形验证</h2>  <a id="more"></a>
<h2 id="Django后端"><a href="#Django后端" class="headerlink" title="Django后端"></a>Django后端</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入redis库</span><br><span class="line">import redis</span><br><span class="line"></span><br><span class="line">#定义地址和端口</span><br><span class="line">host &#x3D; &#39;127.0.0.1&#39;</span><br><span class="line">port &#x3D; 6379</span><br><span class="line"></span><br><span class="line">#建立redis连接</span><br><span class="line">r &#x3D; redis.Redis(host&#x3D;host,port&#x3D;port)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#自定义图片验证码  使用view APIView 返回json  这是返回图片的 HttpResponse</span><br><span class="line">class MyCode(View):</span><br><span class="line">    # 定义rgb随机颜色</span><br><span class="line">    def get_random_color(self):</span><br><span class="line">        R &#x3D; random.randrange(255)</span><br><span class="line">        G &#x3D; random.randrange(255)</span><br><span class="line">        B &#x3D; random.randrange(255)</span><br><span class="line">        return (R,G,B)</span><br><span class="line">    # 定义图片视图</span><br><span class="line">    def get(self,request):</span><br><span class="line">        # 画布</span><br><span class="line">        img_size &#x3D; (120,50)</span><br><span class="line">        # 定义图片对象</span><br><span class="line">        image &#x3D; Image.new(&#39;RGB&#39;,img_size,&#39;white&#39;)</span><br><span class="line">        # 定义画笔</span><br><span class="line">        draw &#x3D; ImageDraw.Draw(image,&#39;RGB&#39;)</span><br><span class="line">        # 定义内容</span><br><span class="line">        source &#x3D; &#39;0123546qwrsadzxc&#39;</span><br><span class="line">        # 接收容器</span><br><span class="line">        code_str &#x3D; &#39;&#39;</span><br><span class="line">        for i in range(4):</span><br><span class="line">            # 获取字母颜色</span><br><span class="line">            text_color &#x3D; self.get_random_color()</span><br><span class="line">            # 获取随机下标</span><br><span class="line">            tmp_num &#x3D; random.randrange(len(source))</span><br><span class="line">            # 随机字符串</span><br><span class="line">            random_str &#x3D; source[tmp_num]</span><br><span class="line">            # 装入容器</span><br><span class="line">            code_str +&#x3D; random_str</span><br><span class="line">            # 绘制字符串</span><br><span class="line">            draw.text((10+30*i,20),random_str,text_color)</span><br><span class="line">        # 获取缓存区</span><br><span class="line">        buf &#x3D; io.BytesIO()</span><br><span class="line">        # 将临时图片保存到缓冲</span><br><span class="line">        image.save(buf,&#39;png&#39;)</span><br><span class="line">        # 保存随机码</span><br><span class="line">        r.set(&#39;code&#39;,code_str)</span><br><span class="line">        return HttpResponse(buf.getvalue(),&#39;image&#x2F;png&#39;)</span><br></pre></td></tr></table></figure>
<p>在登录接口接收code<br><img src="https://i.loli.net/2020/04/25/CZY6WukD7jq8svc.png" alt><br>在url.py写入路由<br><img src="https://i.loli.net/2020/04/25/HDIBaWr3iAz2ZKf.png" alt></p>
<h2 id="Vue前端"><a href="#Vue前端" class="headerlink" title="Vue前端"></a>Vue前端</h2><p>在需要添加验证码的组件中加入<br><img src="https://i.loli.net/2020/04/25/v56lFMswcLJATer.png" alt><br>定义验证码变量和定义验证码路由<br><img src="https://i.loli.net/2020/04/25/XvOGUopZKdgHRaF.png" alt><br>自定义验证码方法<br><img src="https://i.loli.net/2020/04/25/FyHGjYMi4DbLhrJ.png" alt><br>判断验证码是否输入及在请求后台接口中加入验证码变量<br><img src="https://i.loli.net/2020/04/25/T34h1HVGljExvmJ.png" alt></p>
]]></content>
      <categories>
        <category>Django+Vue图形验证码</category>
      </categories>
  </entry>
  <entry>
    <title>第六篇文章</title>
    <url>/2020/04/26/day5/</url>
    <content><![CDATA[<ul>
<li>打开百度搜索<a href="https://login.bce.baidu.com/?account=" target="_blank" rel="noopener">百度智能云</a>注册登录  <a id="more"></a></li>
<li>在文字识别中创建一个应用<br><img src="https://i.loli.net/2020/04/26/RtBNTwapydKSCFv.png" alt></li>
<li>点开文字识别页面<br><img src="https://i.loli.net/2020/04/26/AHTxWXPabFzDp9m.png" alt></li>
<li>有一个技术文档我们可以点开,里面有详细操作说明。想要学习的朋友可以参考技术文档<br><img src="https://i.loli.net/2020/04/26/W6TbmUyphYLKZ7X.png" alt></li>
</ul>
<h3 id="Django具体操作"><a href="#Django具体操作" class="headerlink" title="Django具体操作"></a>Django具体操作</h3><ul>
<li>在Django项目根目录下建立一个.py文件<br><img src="https://i.loli.net/2020/04/26/wzmGIhWFJODs9PT.png" alt></li>
<li>导包<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import base64</span><br><span class="line">import urllib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 读取token 注意这里的client_id就是你的应用的Aplkey,client_secret就是你的Secret Key</span><br><span class="line"></span><br><span class="line">res &#x3D; requests.get(&quot;https:&#x2F;&#x2F;aip.baidubce.com&#x2F;oauth&#x2F;2.0&#x2F;token?grant_type&#x3D;client_credentials&amp;client_id&#x3D;你的Aplkey&amp;client_secret&#x3D;你的Secret Key&quot;)</span><br><span class="line"></span><br><span class="line">token &#x3D; res.json()[&#39;access_token&#39;]</span><br><span class="line"></span><br><span class="line"># print(token)</span><br><span class="line"></span><br><span class="line">#开始智能识图</span><br><span class="line"></span><br><span class="line">#接口地址 注意这里的</span><br><span class="line"></span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;aip.baidubce.com&#x2F;rest&#x2F;2.0&#x2F;ocr&#x2F;v1&#x2F;accurate_basic?access_token&#x3D;&#39;+token</span><br><span class="line"></span><br><span class="line">#定义头部信息</span><br><span class="line"></span><br><span class="line">myheaders &#x3D; &#123;&#39;Content-Type&#39;:&#39;application&#x2F;x-www-form-urlencoded&#39;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#操作图片</span><br><span class="line">#读取图片</span><br><span class="line"></span><br><span class="line">myimg &#x3D; open(&#39;.&#x2F;code.png&#39;,&#39;rb&#39;)</span><br><span class="line"></span><br><span class="line">temp_img &#x3D; myimg.read()</span><br><span class="line"></span><br><span class="line">myimg.close()</span><br><span class="line"></span><br><span class="line">#进行base64编码</span><br><span class="line"></span><br><span class="line">temp_data &#x3D; &#123;&#39;image&#39;:base64.b64encode(temp_img)&#125;</span><br><span class="line"></span><br><span class="line">#对图片地址进行urlencode操作</span><br><span class="line"></span><br><span class="line">temp_data &#x3D; urllib.parse.urlencode(temp_data)</span><br><span class="line"></span><br><span class="line">#请求视图接口</span><br><span class="line"></span><br><span class="line">res &#x3D; requests.post(url&#x3D;url,data&#x3D;temp_data,headers&#x3D;myheaders)</span><br><span class="line"></span><br><span class="line">以json格式取出验证码</span><br><span class="line"></span><br><span class="line">code &#x3D; res.json()[&#39;words_result&#39;][0][&#39;words&#39;]</span><br><span class="line"></span><br><span class="line">code &#x3D; str(code).replace(&#39; &#39;,&#39;&#39;)</span><br></pre></td></tr></table></figure>



</li>
</ul>
]]></content>
      <categories>
        <category>Django+百度智能云识别图片验证码</category>
      </categories>
  </entry>
  <entry>
    <title>第七篇文章</title>
    <url>/2020/04/27/day6/</url>
    <content><![CDATA[<h3 id="导入chromedriver"><a href="#导入chromedriver" class="headerlink" title="导入chromedriver"></a>导入chromedriver</h3> <a id="more"></a>
<ul>
<li>首先下载chromedriver.exe文件<a href="http://npm.taobao.org/mirrors/chromedriver/" target="_blank" rel="noopener">点击下载</a>  </li>
</ul>
<h3 id="Django操作"><a href="#Django操作" class="headerlink" title="Django操作"></a>Django操作</h3><ul>
<li><p>把下载好的chromedriver.exe文件导入项目根目录下<br><img src="https://i.loli.net/2020/04/27/e9jwyPS1kRdIs2z.png" alt></p>
</li>
<li><p>创建一个.py脚本<br>具体代码:<br>需要注意:因为使用的百度智能云,如果验证码是字母或者数字它的识别率会识别不完整,关于如何提高它的清晰度文章最后已经写了</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">from urllib.parse import urlparse</span><br><span class="line">import time</span><br><span class="line">import requests</span><br><span class="line">import json</span><br><span class="line">import base64</span><br><span class="line">import urllib</span><br><span class="line">from selenium.webdriver import ActionChains</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 建立浏览器对象</span><br><span class="line">browser &#x3D; webdriver.Chrome()</span><br><span class="line">#</span><br><span class="line"># #打开网址</span><br><span class="line">browser.get(&#39;http:&#x2F;&#x2F;localhost:8080&#x2F;login&#39;)</span><br><span class="line">#</span><br><span class="line">time.sleep(3)</span><br><span class="line">#</span><br><span class="line"># # 选择元素</span><br><span class="line">myimg &#x3D; browser.find_element_by_xpath(&#39;&#x2F;html&#x2F;body&#x2F;div[1]&#x2F;div&#x2F;section&#x2F;div&#x2F;table&#x2F;tr[4]&#x2F;td[2]&#x2F;img&#39;)</span><br><span class="line">print(myimg)</span><br><span class="line"></span><br><span class="line"># myimg &#x3D; browser.find_element_by_xpath(&#39;&#x2F;&#x2F;*[@id&#x3D;&quot;app&quot;]&#x2F;div&#x2F;section&#x2F;div&#x2F;table&#x2F;tr[4]&#x2F;td[2]&#x2F;img&#39;)</span><br><span class="line"># print(myimg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># # 截取屏幕</span><br><span class="line">myimg.screenshot(&#39;code1.png&#39;)</span><br><span class="line"># browser.get_screenshot_as_file(&#39;register.png&#39;)</span><br><span class="line">#</span><br><span class="line"># browser.close()</span><br><span class="line"></span><br><span class="line"># 请求百度接口</span><br><span class="line">res &#x3D; requests.get(&#39;https:&#x2F;&#x2F;aip.baidubce.com&#x2F;oauth&#x2F;2.0&#x2F;token?grant_type&#x3D;client_credentials&amp;client_id&#x3D;3xIXz3mqYXt0meOPxaVPmThq&amp;client_secret&#x3D;B5GrwiN0PUEXCDODyEf5gFGLMr7oO5cb&#39;)</span><br><span class="line">#</span><br><span class="line">#</span><br><span class="line"># # 转码</span><br><span class="line">res &#x3D; json.loads(str(res.text))</span><br><span class="line">token &#x3D; res[&#39;access_token&#39;]</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># # 识别图像</span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;aip.baidubce.com&#x2F;rest&#x2F;2.0&#x2F;ocr&#x2F;v1&#x2F;accurate_basic?access_token&#x3D;&#39; + token</span><br><span class="line"></span><br><span class="line"># 构造头部</span><br><span class="line"></span><br><span class="line">header &#x3D; &#123;&#39;Content-Type&#39;:&#39;application&#x2F;x-www-form-urlencoded&#39;&#125;</span><br><span class="line"></span><br><span class="line"># 构造图片 # 注意这里面的图片是day5文章中下载好的图片</span><br><span class="line">img &#x3D; open(&#39;.&#x2F;code1.png&#39;, &#39;rb&#39;)</span><br><span class="line">temp_img &#x3D; img.read()</span><br><span class="line"># img.close()</span><br><span class="line"></span><br><span class="line"># 构建参数</span><br><span class="line">data &#x3D; &#123;&#39;image&#39;:base64.b64encode(temp_img)&#125;</span><br><span class="line"># 编码</span><br><span class="line">data &#x3D; urllib.parse.urlencode(data)</span><br><span class="line"></span><br><span class="line"># 发送请求</span><br><span class="line">res &#x3D; requests.post(url&#x3D;url,data&#x3D;data,headers&#x3D;header)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># js转化</span><br><span class="line">code &#x3D; json.loads(res.text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 模拟操作 提交信息</span><br><span class="line"></span><br><span class="line">code &#x3D; code[&#39;words_result&#39;][0][&#39;words&#39;]</span><br><span class="line"></span><br><span class="line">browser.find_element_by_xpath(&#39;&#x2F;html&#x2F;body&#x2F;div[1]&#x2F;div&#x2F;section&#x2F;div&#x2F;table&#x2F;tr[1]&#x2F;td[2]&#x2F;input&#39;).send_keys(&#39;小王&#39;)</span><br><span class="line"></span><br><span class="line">browser.find_element_by_xpath(&#39;&#x2F;html&#x2F;body&#x2F;div[1]&#x2F;div&#x2F;section&#x2F;div&#x2F;table&#x2F;tr[2]&#x2F;td[2]&#x2F;input&#39;).send_keys(&#39;1234&#39;)</span><br><span class="line"></span><br><span class="line">#填入验证码</span><br><span class="line">browser.find_element_by_xpath(&#39;&#x2F;html&#x2F;body&#x2F;div[1]&#x2F;div&#x2F;section&#x2F;div&#x2F;table&#x2F;tr[3]&#x2F;td[2]&#x2F;input&#39;).send_keys(code.strip().replace(&#39; &#39;,&#39;&#39;))</span><br><span class="line"></span><br><span class="line">#进行拖动操作</span><br><span class="line">button &#x3D; browser.find_element_by_class_name(&#39;dv_handler&#39;)</span><br><span class="line">print(button)</span><br><span class="line">#声明动作实例</span><br><span class="line">action &#x3D; ActionChains(browser)</span><br><span class="line">#点击并且按住</span><br><span class="line">action.click_and_hold(button).perform()</span><br><span class="line">action.reset_actions()</span><br><span class="line">#实际拖动像素和轨迹长度是有出入的</span><br><span class="line">action.move_by_offset(280,0).perform()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#登录按钮 xpath方法</span><br><span class="line"># browser.find_element_by_xpath(&#39;&#x2F;html&#x2F;body&#x2F;div[1]&#x2F;div&#x2F;section&#x2F;div&#x2F;table&#x2F;tr[5]&#x2F;td[2]&#x2F;button[1]&#x2F;span&#39;).click()</span><br><span class="line"></span><br><span class="line">#点击登录按钮 name方法</span><br><span class="line">browser.find_element_by_class_name(&#39;h-btn&#39;).click()</span><br><span class="line"></span><br><span class="line"># 停留5秒</span><br><span class="line">time.sleep(5)</span><br><span class="line"># 退出</span><br><span class="line">browser.close()</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="提高智能云识图清晰度"><a href="#提高智能云识图清晰度" class="headerlink" title="提高智能云识图清晰度"></a>提高智能云识图清晰度</h3><ul>
<li><p>需要先下载一个包</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install opencv-python</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后在项目根目录下再建立一个.py文件<br>具体代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#导包  这个包就是刚才下载好的  </span><br><span class="line">import cv2</span><br><span class="line"></span><br><span class="line">#读图</span><br><span class="line">img &#x3D; cv2.imread(&#39;.&#x2F;code.png&#39;,cv2.IMREAD_GRAYSCALE)</span><br><span class="line"></span><br><span class="line">print(img)</span><br><span class="line"></span><br><span class="line">#写图</span><br><span class="line">cv2.imwrite(&#39;.&#x2F;code1.png&#39;,img)</span><br></pre></td></tr></table></figure></li>
<li><p>最后它会自动截取验证码将这个验证码code1.png替换成上面py文件中的code.png即可</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Django+selenium实现自动登录</category>
      </categories>
  </entry>
  <entry>
    <title>第八篇文章</title>
    <url>/2020/04/28/day7/</url>
    <content><![CDATA[<h3 id="微博开放平台操作"><a href="#微博开放平台操作" class="headerlink" title="微博开放平台操作"></a>微博开放平台操作</h3><ul>
<li>首先打开百度搜索微博开放平台注册登录  <a id="more"></a>

</li>
</ul>
<p>登陆后创建一个应用<br><img src="https://i.loli.net/2020/04/28/l28m9qJiaWKtwrN.png" alt></p>
<ul>
<li><p>创建好应用后会出现以下页面 其中App Key和App Secret我们下面会用到<br><img src="https://i.loli.net/2020/04/28/vDqunQCbN7ZJmSp.png" alt></p>
</li>
<li><p>点开高级信息自定义写一个微博的授权回调地址和取消授权回调地址。两个地址尽量保持一致<br><img src="https://i.loli.net/2020/04/28/rUYDE9qSGHvog8I.png" alt></p>
</li>
<li><p>最后在测试信息中添加自己的账号,因为没有通过微博审核,所以必须在测试信息中手动添加一个微博账号以验证第三方信息<br><img src="https://i.loli.net/2020/04/28/QsMEY4SVgBy5Fha.png" alt></p>
</li>
</ul>
<h3 id="Vue前端操作"><a href="#Vue前端操作" class="headerlink" title="Vue前端操作"></a>Vue前端操作</h3><ul>
<li><p>在Django目录下的static目录下引入微博图标,使前端页面可以引用<br><img src="https://i.loli.net/2020/04/28/RAfUN5sLdlpEbDB.png" alt></p>
</li>
<li><p>首先在项目登录组件中加入第三方登录图标,用以点击跳转微博登录页面<br><img src="https://i.loli.net/2020/04/28/kdXDUGhr92aVIqY.png" alt></p>
</li>
<li><p>在自定义方法 methods中定义图片方法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;新浪微博三方登录</span><br><span class="line">sina:function()&#123;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;拼接新浪微博url</span><br><span class="line">let clinet_id &#x3D; 3249062725;</span><br><span class="line"></span><br><span class="line"># client_id 就是应用中的App Key  而redirect_uri就是自己手动创建的授权回调页</span><br><span class="line">let url &#x3D; &quot;https:&#x2F;&#x2F;api.weibo.com&#x2F;oauth2&#x2F;authorize?client_id&#x3D;3249062725&amp;redirect_uri&#x3D;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;md_admin&#x2F;weibo&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;跳转</span><br><span class="line">window.location.href &#x3D; url;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li>
<li><p>这样我们的登录页面就出现微博图标,前端操作完成</p>
</li>
</ul>
<h3 id="Django后端操作"><a href="#Django后端操作" class="headerlink" title="Django后端操作"></a>Django后端操作</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 新浪微博回调方法</span><br><span class="line">def wb_back(request):</span><br><span class="line"></span><br><span class="line">    # 接收参数</span><br><span class="line">    code &#x3D; request.GET.get(&#39;code&#39;,None)</span><br><span class="line"></span><br><span class="line">    # 定义token接口地址</span><br><span class="line">    url &#x3D; &quot;https:&#x2F;&#x2F;api.weibo.com&#x2F;oauth2&#x2F;access_token&quot;</span><br><span class="line"></span><br><span class="line">    # 定义参数</span><br><span class="line">    re &#x3D; requests.post(url,data&#x3D;&#123;</span><br><span class="line">        #这个是应用中的App Key</span><br><span class="line">        &#39;client_id&#39;:&#39;App Key&#39;,</span><br><span class="line">        #这个是应用中的App Secret</span><br><span class="line">        &#39;client_secret&#39;:&#39;App Secret&#39;,</span><br><span class="line">        &#39;grant_type&#39;:&#39;authorization_code&#39;,</span><br><span class="line">        &#39;code&#39;:code,</span><br><span class="line">        #这个是应用中的回调页</span><br><span class="line">        &#39;redirect_uri&#39;:&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;md_admin&#x2F;weibo&#39;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    # print(re.json())</span><br><span class="line">    # 换取新浪微博用户信息</span><br><span class="line">    res &#x3D; requests.get(&#39;https:&#x2F;&#x2F;api.weibo.com&#x2F;2&#x2F;users&#x2F;show.json&#39;,params&#x3D;&#123;&#39;access_token&#39;:re.json()[&#39;access_token&#39;],&#39;uid&#39;:re.json()[&#39;uid&#39;]&#125;)</span><br><span class="line">    # print(res.json())</span><br><span class="line"></span><br><span class="line">    sina_id &#x3D; &#39;&#39;</span><br><span class="line">    user_id &#x3D; &#39;&#39;</span><br><span class="line">    # 判断是否用新浪微博登陆过</span><br><span class="line">    user &#x3D; User.objects.filter(username&#x3D;str(res.json()[&#39;name&#39;])).first()</span><br><span class="line">    if user:</span><br><span class="line">        # 代表曾经用该账号登陆过</span><br><span class="line">        sina_id &#x3D; user.username</span><br><span class="line">        user_id &#x3D; user.id</span><br><span class="line">    else:</span><br><span class="line">        # 首次登录 入库新浪微博账号</span><br><span class="line">        user &#x3D; User(username&#x3D;str(res.json()[&#39;name&#39;]),password&#x3D;&#39;&#39;)</span><br><span class="line">        user.save()</span><br><span class="line">        user &#x3D; User.objects.filter(username&#x3D;str(res.json()[&#39;name&#39;])).first()</span><br><span class="line">        sina_id &#x3D; user.username</span><br><span class="line">        user_id &#x3D; user.id</span><br><span class="line">    print(sina_id,user_id)</span><br><span class="line">    # 重定向</span><br><span class="line">    return redirect(&quot;http:&#x2F;&#x2F;localhost:8080?sina_id&#x3D;&quot;+str(sina_id)+&quot;&amp;uid&#x3D;&quot;+str(user_id))</span><br></pre></td></tr></table></figure>
<ul>
<li><p>路由注册</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from myapp.md_user import *</span><br><span class="line"></span><br><span class="line">urlpatterns &#x3D; [</span><br><span class="line">    #定义超链接路由</span><br><span class="line">    re_path(&#39;^static&#x2F;upload&#x2F;(?P&lt;path&gt;.*)$&#39;,serve,&#123;&#39;document_root&#39;:&#39;&#x2F;static&#x2F;upload&#x2F;&#39;&#125;),</span><br><span class="line">    path(&#39;&#39;,myindex),</span><br><span class="line">    path(&#39;register&#x2F;&#39;,Register.as_view()),</span><br><span class="line">    path(&#39;login&#x2F;&#39;,Login.as_view()),</span><br><span class="line">    path(&#39;mycode&#x2F;&#39;,MyCode.as_view()),</span><br><span class="line">    path(&#39;updatepass&#x2F;&#39;,UpdatePass.as_view()),</span><br><span class="line">    # md_admin&#x2F;weibo就是自己之前定义的回调网址中的参数，一定要一样</span><br><span class="line">    path(&#39;md_admin&#x2F;weibo&#x2F;&#39;,wb_back),</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure></li>
<li><p>以上就是Django+Vue实现第三方登录的全部代码和操作  </p>
</li>
<li><p>最后献上前后端交互实现第三方登录的具体流程图<br><img src="https://i.loli.net/2020/04/28/S2jumUoPNXDrWV3.png" alt></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Django+Vue实现第三方登录</category>
      </categories>
  </entry>
  <entry>
    <title>第九篇文章</title>
    <url>/2020/04/29/day8/</url>
    <content><![CDATA[<ul>
<li>首先先下载cv2库<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pip3 install opencv-python</span><br></pre></td></tr></table></figure></li>
<li>下载好导入项目里<br>具体代码:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import cv2</span><br><span class="line"># 画笔库</span><br><span class="line">from PIL import Image,ImageDraw</span><br><span class="line"></span><br><span class="line"># 定义文件上传通用类</span><br><span class="line">class UploadFile(APIView):</span><br><span class="line">    def post(self,request):</span><br><span class="line"></span><br><span class="line">        # 接收参数</span><br><span class="line">        myfile &#x3D; request.FILES.get(&#39;file&#39;)</span><br><span class="line"></span><br><span class="line">        # 建立文件流对象</span><br><span class="line">        f &#x3D; open(os.path.join(UPLOAD_ROOT,&#39;&#39;,myfile.name),&#39;wb&#39;)</span><br><span class="line"></span><br><span class="line">        # 写入</span><br><span class="line">        for chunk in myfile.chunks():</span><br><span class="line">            f.write(chunk)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line">        # 设置图片打开路径</span><br><span class="line">        imgpath &#x3D; &#39;.&#x2F;static&#x2F;upload&#x2F;&#39; + myfile.name</span><br><span class="line"></span><br><span class="line">        # 打开图片</span><br><span class="line">        im &#x3D; Image.open(UPLOAD_ROOT+&#39;&#x2F;&#39;+myfile.name)</span><br><span class="line"></span><br><span class="line">        # 生成画笔对象</span><br><span class="line">        draw &#x3D; ImageDraw.Draw(im)</span><br><span class="line"></span><br><span class="line">        # 字体</span><br><span class="line">        font &#x3D; ImageFont.truetype(font&#x3D;&#39;C:\\Windows\\Fonts\\simkai.ttf&#39;, size&#x3D;100)</span><br><span class="line"></span><br><span class="line">        # 绘制图片</span><br><span class="line">        draw.text((50, 200), &#39;加油&#39;, fill&#x3D;(76, 234, 124, 180), font&#x3D;font)</span><br><span class="line"></span><br><span class="line">        # 图像压缩</span><br><span class="line">        # 读图</span><br><span class="line">        img &#x3D; cv2.imread(UPLOAD_ROOT+&#39;&#x2F;&#39;+myfile.name)</span><br><span class="line"></span><br><span class="line">        # 压缩操作</span><br><span class="line">        cv2.imwrite(UPLOAD_ROOT+&#39;&#x2F;&#39;+myfile.name,img,[cv2.IMWRITE_JPEG_QUALITY,50])</span><br><span class="line"></span><br><span class="line">        # 查看图片</span><br><span class="line">        im.show()</span><br><span class="line"></span><br><span class="line">        # 存储图片</span><br><span class="line">        im.save(UPLOAD_ROOT+&#39;&#x2F;&#39;+myfile.name)</span><br><span class="line"></span><br><span class="line">        # 返回文件名</span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;filename&#39;:myfile.name</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">最后在url.py文件里导入路由</span><br><span class="line"></span><br><span class="line">path(&#39;upload&#x2F;&#39;,UploadFile.as_view()),</span><br></pre></td></tr></table></figure></li>
<li>前端操作<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">	&lt;myheader&gt;&lt;&#x2F;myheader&gt;</span><br><span class="line"></span><br><span class="line">			&lt;div&gt;</span><br><span class="line">				&lt;img :src&#x3D;&quot;src&quot; alt&#x3D;&quot;&quot;&gt;</span><br><span class="line">				&lt;Avatar :src&#x3D;&quot;src&quot; :width&#x3D;&quot;150&quot; fit&#x3D;&quot;fill&quot;&gt;&lt;&#x2F;Avatar&gt;</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">				&lt;table&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							用户头像:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;file&quot; @change&#x3D;&#39;upload&#39;&gt;</span><br><span class="line">					</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line">				&lt;&#x2F;table&gt;</span><br><span class="line"></span><br><span class="line">	&lt;myfooter&gt;&lt;&#x2F;myfooter&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">import myheader from &#39;.&#x2F;myheader&#39;</span><br><span class="line">import myfooter from &#39;.&#x2F;myfooter&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">		msg: &quot;这是一个变量&quot;,</span><br><span class="line">		src:&#39;&#39;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F;注册组件标签</span><br><span class="line">  components:&#123;</span><br><span class="line">	  &#39;myheader&#39;:myheader,</span><br><span class="line">		&#39;myfooter&#39;:myfooter,</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;定义提交事件</span><br><span class="line">	  upload:function(e)&#123;</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;获取文件</span><br><span class="line">			let file &#x3D; e.target.files[0];</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;声明表单参数</span><br><span class="line">			let param &#x3D; new FormData();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F; 三个参数文件的key  文件的实体  文件名</span><br><span class="line">			param.append(&#39;file&#39;,file,file.name);</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;声明请求头</span><br><span class="line">			let config &#x3D;&#123;headers:&#123;&#39;Content-Type&#39;:&#39;multipart&#x2F;form-data&#39;&#125;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		  &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.post(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;upload&#x2F;&#39;,param,config).then((result)&#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">				console.log(result);</span><br><span class="line">				this.src &#x3D; &quot;http:&#x2F;&#x2F;localhost:8000&#x2F;static&#x2F;upload&#x2F;&quot;+ result.data.filename</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			&#125;)</span><br><span class="line"></span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">td&#123;</span><br><span class="line">	padding:10px</span><br><span class="line">&#125;</span><br><span class="line">.imgcode &#123;</span><br><span class="line">	cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure></li>
<li>最后在index.js中注册组件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import myprofiles from &#39;@&#x2F;components&#x2F;myprofiles&#39;</span><br><span class="line"></span><br><span class="line">var routes &#x3D; [</span><br><span class="line">        &#123;</span><br><span class="line">          path:&#39;&#x2F;myprofiles&#39;,</span><br><span class="line">          name:&#39;myprofiles&#39;,</span><br><span class="line">          component:myprofiles</span><br><span class="line">        &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>实现图片加水印和图片压缩</category>
      </categories>
  </entry>
  <entry>
    <title>第十篇文章</title>
    <url>/2020/04/30/day9/</url>
    <content><![CDATA[<ul>
<li>注册一个七牛云账号找到空间管理<a id="more"></a>
<img src="https://i.loli.net/2020/04/30/qndGtEMjUFg3r4l.png" alt></li>
<li>新建一个存储空间,需要注意名称自定义就行,存储区域按照自己所在地区选择,访问控制必须为公开。<br><img src="https://i.loli.net/2020/04/30/lDGezASkrJ7ox9M.png" alt></li>
<li>新建完成后,点击空间名称<br><img src="https://i.loli.net/2020/04/30/xHe68yZJAKw2iQ1.png" alt></li>
<li>点开空间名称,出现一下页面<br><img src="https://i.loli.net/2020/04/30/c6l1oHKfINjJODC.png" alt></li>
<li>点开文件管理。我们可以在这里上传一张照片,上传成功页面是一下页面。我们将鼠标移动到更多,复制外链就可以看到我们的上传的照片<br><img src="https://i.loli.net/2020/04/30/lMqmWKO84sTDjY1.png" alt></li>
<li>最后点开个人中心的密钥管理,这里的AK和SK我们下面会用到<br><img src="https://i.loli.net/2020/04/30/cQkV9X3YBJfKnZo.png" alt></li>
<li>接下来就是我们Django操作了<br>具体代码：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 定义七牛云token</span><br><span class="line">from qiniu import Auth</span><br><span class="line"></span><br><span class="line">class QiNiu(APIView):</span><br><span class="line">    def get(self,request):</span><br><span class="line"></span><br><span class="line">        # 声明认证对象</span><br><span class="line">        q &#x3D; Auth(&#39;这个引号里面的就是我们上面说的AK&#39;,&#39;这个引号里面就是SK&#39;)</span><br><span class="line"></span><br><span class="line">        # 获取token  这里的1907bb是我自定义的空间名称</span><br><span class="line">        token &#x3D; q.upload_token(&#39;1907bb&#39;)</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;token&#39;:token</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure></li>
<li>最后别忘了在url.py注册路由<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">urlpatterns &#x3D; [</span><br><span class="line">    #定义超链接路由</span><br><span class="line">    re_path(&#39;^static&#x2F;upload&#x2F;(?P&lt;path&gt;.*)$&#39;,serve,&#123;&#39;document_root&#39;:&#39;&#x2F;static&#x2F;upload&#x2F;&#39;&#125;),</span><br><span class="line">    path(&#39;qiniu&#x2F;&#39;,QiNiu.as_view()),</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li>
<li>Vue前端代码<br>具体代码：<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                七牛云上传:</span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">            &lt;td&gt;</span><br><span class="line">                &lt;input type&#x3D;&quot;file&quot; @change&#x3D;&#39;upload_qiniu&#39;&gt;</span><br><span class="line">        </span><br><span class="line">            &lt;&#x2F;td&gt;</span><br><span class="line">        &lt;&#x2F;tr&gt;</span><br><span class="line">    &lt;&#x2F;table&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">		msg: &quot;这是一个变量&quot;,</span><br><span class="line">		&#x2F;&#x2F;七牛云token</span><br><span class="line">		token:&#39;&#39;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;获取最新的token</span><br><span class="line">		this.get_token();</span><br><span class="line">    &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">		get_token:function()&#123;</span><br><span class="line"></span><br><span class="line">			 &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;qiniu&#x2F;&#39;).then((result)&#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">				console.log(result);</span><br><span class="line"></span><br><span class="line">				this.token &#x3D; result.data.token;</span><br><span class="line"></span><br><span class="line">				console.log(this.token);</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line">			&#125;);</span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line">		upload_qiniu:function(e)&#123;</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;获取文件</span><br><span class="line">			let file &#x3D; e.target.files[0];</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;声明表单参数</span><br><span class="line">			let param &#x3D; new FormData();</span><br><span class="line"></span><br><span class="line">			param.append(&#39;file&#39;,file,file.name);</span><br><span class="line">			param.append(&#39;token&#39;,this.token);</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;自定义axios</span><br><span class="line">				const axios_qiniu &#x3D; this.axios.create(&#123;withCredentials:false&#125;);</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;发送请求</span><br><span class="line">				axios_qiniu(&#123;</span><br><span class="line">					method:&#39;POST&#39;,</span><br><span class="line">					url:&#39;http:&#x2F;&#x2F;up-z1.qiniu.com&#x2F;&#39;,</span><br><span class="line">					data:param,</span><br><span class="line">					timeout:30000	</span><br><span class="line">				&#125;).then(result &#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">					console.log(result)</span><br><span class="line"></span><br><span class="line">					this.src &#x3D; &#39;http:&#x2F;&#x2F;q9kt8ih9p.bkt.clouddn.com&#x2F;&#39;+result.data.key;</span><br><span class="line"></span><br><span class="line">				&#125;);</span><br><span class="line">		&#125;,</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>







</li>
</ul>
]]></content>
      <categories>
        <category>将图片存储到七牛云</category>
      </categories>
  </entry>
  <entry>
    <title>第十一篇文章</title>
    <url>/2020/05/06/day10/</url>
    <content><![CDATA[<ul>
<li>注册一个<a href="https://console.upyun.com/register/" target="_blank" rel="noopener">又拍云</a>账号,点击注册。<a id="more"></a></li>
<li>第一步点击控制台<br><img src="https://i.loli.net/2020/05/06/zG2gKnRqQ7XtVAv.png" alt></li>
<li>第二步点击云存储<br><img src="https://i.loli.net/2020/05/06/J4NepRovFdB3j5g.png" alt></li>
<li>第三步新建一个服务<br><img src="https://i.loli.net/2020/05/06/vW4kSOcBgf2aPZ1.png" alt></li>
<li>第四步完善信息（名字可以自己定义其他的不需要修改）<br><img src="https://i.loli.net/2020/05/06/QPGqSoFDU6gNZIM.png" alt></li>
<li>完善授权员信息（操作员可以输入自己的账号,密码是自动生成的但是一定要记住因为它是一次性的。将权限全部选上）<br><img src="https://i.loli.net/2020/05/06/HA9TaLMj6O8GUvQ.png" alt><h3 id="Django操作"><a href="#Django操作" class="headerlink" title="Django操作"></a>Django操作</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入又拍云</span><br><span class="line">import upyun</span><br><span class="line"></span><br><span class="line">class UpYun(APIView):</span><br><span class="line">    def post(self,request):</span><br><span class="line"></span><br><span class="line">        # 获取文件</span><br><span class="line">        file &#x3D; request.FILES.get(&#39;file&#39;)</span><br><span class="line">        # 新建又拍云实例 </span><br><span class="line">        up &#x3D; upyun.UpYun(&#39;你的服务名&#39;,&#39;你的账号名&#39;,&#39;新建服务时生成的密码&#39;)</span><br><span class="line">        # 声明头部信息</span><br><span class="line">        headers &#x3D; &#123;&#39;x-gmkerl-rotate&#39;:&#39;auto&#39;&#125;</span><br><span class="line">        # 上传图片</span><br><span class="line">        for chunk in file.chunks():</span><br><span class="line">            res &#x3D; up.put(&#39;&#x2F;1235.png&#39;,chunk,checksum&#x3D;True,headers&#x3D;headers)</span><br><span class="line"></span><br><span class="line">                    #返回结果</span><br><span class="line">        return Response(&#123;&#39;filename&#39;:file.name&#125;)</span><br></pre></td></tr></table></figure></li>
<li>后端最后记得写上路由<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">urlpatterns &#x3D; [</span><br><span class="line"></span><br><span class="line">    path(&#39;upyun&#x2F;&#39;,UpYun.as_view()),</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h3 id="Vue操作"><a href="#Vue操作" class="headerlink" title="Vue操作"></a>Vue操作</h3><ul>
<li>在需要的组件中导入<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;input type&#x3D;&quot;file&quot; @change&#x3D;&quot;upload_upyun&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class&#x3D;&quot;upload&quot;&gt;拖拽上传&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;   </span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F;监听属性</span><br><span class="line">  watch: &#123;&#125;,</span><br><span class="line">  &#x2F;&#x2F;计算属性</span><br><span class="line">  computed: &#123;&#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    &#x2F;&#x2F; 注册拖拽容器</span><br><span class="line">    let upload &#x3D; document.querySelector(&quot;.upload&quot;);</span><br><span class="line">    &#x2F;&#x2F;声明监听事件</span><br><span class="line">    upload.addEventListener(&quot;dragenter&quot;, this.onDrag, false);</span><br><span class="line">    upload.addEventListener(&quot;dragover&quot;, this.onDrag, false);</span><br><span class="line">    upload.addEventListener(&quot;drop&quot;, this.onDrop, false);</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F;自定义方法</span><br><span class="line">  methods: &#123;</span><br><span class="line">    onDrag(e) &#123;</span><br><span class="line">      e.stopPropagation();</span><br><span class="line">      e.preventDefault();</span><br><span class="line">    &#125;,</span><br><span class="line">    onDrop(e) &#123;</span><br><span class="line">      e.stopPropagation();</span><br><span class="line">      e.preventDefault();</span><br><span class="line">      &#x2F;&#x2F;调用自定义上传方法</span><br><span class="line">      this.upload_upyun(e.dataTransfer.files);</span><br><span class="line">    &#125;,</span><br><span class="line">    &#x2F;&#x2F;上传又拍云</span><br><span class="line">    upload_upyun: function(files) &#123;</span><br><span class="line">      &#x2F;&#x2F;获取文件对象</span><br><span class="line">      &#x2F;&#x2F;let file &#x3D; e.target.files[0];</span><br><span class="line">      let file &#x3D; files[0];</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F;声明参数</span><br><span class="line">      let param &#x3D; new FormData();</span><br><span class="line">      param.append(&quot;file&quot;, file);</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F;声明头部信息</span><br><span class="line">      const config &#x3D; &#123;</span><br><span class="line">        headers: &#123; &quot;Content-Type&quot;: &quot;multipart&#x2F;form-data&quot; &#125;</span><br><span class="line">      &#125;;</span><br><span class="line"></span><br><span class="line">      this.axios.post(&quot;http:&#x2F;&#x2F;localhost:8000&#x2F;upyun&#x2F;&quot;, param, config).then(res&#x3D;&gt;&#123;</span><br><span class="line">        </span><br><span class="line">          console.log(res);</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 样式中定义拖拽模块范围</span><br><span class="line">&lt;style&gt;</span><br><span class="line">.upload &#123;</span><br><span class="line">  margin: 100px auto;</span><br><span class="line">  width: 300px;</span><br><span class="line">  height: 150px;</span><br><span class="line">  border: 2px dashed #f00;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
      <categories>
        <category>将图片存储到又拍云</category>
      </categories>
  </entry>
  <entry>
    <title>第十二篇文章</title>
    <url>/2020/05/07/day11/</url>
    <content><![CDATA[<h3 id="Django后端"><a href="#Django后端" class="headerlink" title="Django后端"></a>Django后端</h3><ul>
<li><p>使用装饰器判断</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 后端使用装饰器</span><br><span class="line"># 定义权限检测装饰器</span><br><span class="line">def my_decorator(func):</span><br><span class="line">    def wrapper(request,*args,**kwargs):</span><br><span class="line"></span><br><span class="line">        # 接收参数</span><br><span class="line">        uid &#x3D; request.GET.get(&#39;uid&#39;,None)</span><br><span class="line"></span><br><span class="line">        myjwt &#x3D; request.GET.get(&#39;jwt&#39;)</span><br><span class="line"></span><br><span class="line">        print(myjwt)</span><br><span class="line"></span><br><span class="line">        # 验证用户合法性</span><br><span class="line">        decode_jwt &#x3D; jwt.decode(myjwt,&#39;tsk123&#39;,algorithms&#x3D;[&#39;HS256&#39;])</span><br><span class="line"></span><br><span class="line">        # 进行比对</span><br><span class="line">        if int(uid) !&#x3D; int(decode_jwt[&#39;uid&#39;]):</span><br><span class="line">            </span><br><span class="line">            return Response(&#123;</span><br><span class="line">                &#39;code&#39;:401,</span><br><span class="line">                &#39;message&#39;:&#39;您的密钥无权限&#39;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return func(request,*args,**kwargs)</span><br><span class="line">    return wrapper</span><br></pre></td></tr></table></figure></li>
<li><p>在需要的视图中导入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入装饰器包</span><br><span class="line">from django.utils.decorators import method_decorator</span><br><span class="line"></span><br><span class="line"># 获取用户信息接口</span><br><span class="line">class UserInfo(APIView):</span><br><span class="line"></span><br><span class="line">    @method_decorator(my_decorator)</span><br><span class="line">    def get(self,request):</span><br><span class="line"></span><br><span class="line">        # 接收参数</span><br><span class="line">        uid &#x3D; request.GET.get(&#39;uid&#39;,None)</span><br><span class="line"></span><br><span class="line">        # 查询数据库</span><br><span class="line">        user &#x3D; User.objects.get(id&#x3D;int(uid))</span><br><span class="line"></span><br><span class="line">        if user.img &#x3D;&#x3D;&quot;&quot;:</span><br><span class="line">            user.img &#x3D; &quot;sina.png&quot;</span><br><span class="line"></span><br><span class="line">        #返回</span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;img&#39;:user.img,</span><br><span class="line">            &#39;phone&#39;:user.phone</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>使用中间件判断用户是否携带JWT令牌</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">导入</span><br><span class="line">from django.utils.deprecation import MiddlewareMixin</span><br><span class="line"></span><br><span class="line"># 自定义中间件类</span><br><span class="line">class MyMiddleWare(MiddlewareMixin):</span><br><span class="line">    # 请求之前</span><br><span class="line">    def process_request(self,request):</span><br><span class="line">        uid &#x3D; request.GET.get(&#39;uid&#39;)</span><br><span class="line">        clinet_jwt &#x3D; request.GET.get(&#39;jwt&#39;,None)</span><br><span class="line">    </span><br><span class="line">        decode_jwt &#x3D; jwt.decode(clinet_jwt, &#39;tsk123&#39;, algorithms&#x3D;[&#39;HS256&#39;])</span><br><span class="line">        if decode_jwt[&#39;uid&#39;] !&#x3D; str(uid):</span><br><span class="line">    </span><br><span class="line">            return HttpResponse(&#39;你没有JWT令牌&#39;)</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    # 模板渲染之前</span><br><span class="line">    def process_view(self,request,view_func,view_args,view_kwargs):</span><br><span class="line">        pass</span><br><span class="line">    # 请求之后</span><br><span class="line">    def process_response(self,request,response):</span><br><span class="line">        return response</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="前端Vue"><a href="#前端Vue" class="headerlink" title="前端Vue"></a>前端Vue</h3><ul>
<li>在登录页面如果用户登录成功就将JWT存储到localStorage中<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">localStorage.setItem(&quot;jwt&quot;,result.data.jwt);</span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
      <categories>
        <category>JWT用户信息加密</category>
      </categories>
  </entry>
  <entry>
    <title>第十三篇文章</title>
    <url>/2020/05/08/day12/</url>
    <content><![CDATA[<ul>
<li>首先安装语言库<a id="more"></a></li>
<li>只在当前项目下载  </li>
</ul>
<p>安装命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install vue-i18n --save</span><br></pre></td></tr></table></figure>
<ul>
<li><p>在Vue中的man.js中引入<br><img src="https://i.loli.net/2020/05/08/doOMnqDuVW4yi2B.png" alt><br><img src="https://i.loli.net/2020/05/08/gh3w6zWM1s9IcuB.png" alt></p>
</li>
<li><p>在src目录下建立一个lang文件夹（文件名字可自己定）在lang文件夹下建两个js文件<br><img src="https://i.loli.net/2020/05/08/Lvs7Z3NhAKxE94Q.png" alt></p>
</li>
</ul>
<h4 id="两个语言包变量保持一致"><a href="#两个语言包变量保持一致" class="headerlink" title="两个语言包变量保持一致"></a>两个语言包变量保持一致</h4><ul>
<li><p>zh.js(中文语言包)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;双语规范的变量（中文）</span><br><span class="line"></span><br><span class="line">export const m &#x3D; &#123;</span><br><span class="line">    index: &#39;美多商城&#39;,</span><br><span class="line">    home:&#39;首页&#39;,</span><br><span class="line">    shop:&#39;商城&#39;,</span><br><span class="line">    pages:&#39;页面&#39;,</span><br><span class="line">    contact:&#39;联系&#39;,</span><br><span class="line">    welcome:&#39;欢迎&#39;,</span><br><span class="line">    login:&#39;登陆&#39;,</span><br><span class="line">    logout:&#39;登出&#39;,</span><br><span class="line">    register:&#39;注册&#39;,</span><br><span class="line"></span><br><span class="line">    chinese:&#39;中文&#39;,</span><br><span class="line">    english:&#39;英文&#39;,</span><br><span class="line"></span><br><span class="line">    login:&#39;登录&#39;,</span><br><span class="line">    register:&#39;注册&#39;,</span><br><span class="line"></span><br><span class="line">    logout: &#39;登出&#39;,</span><br><span class="line"></span><br><span class="line">    Welcome: &#39;欢迎&#39;,</span><br><span class="line"></span><br><span class="line">    xiaowang:&#39;小王&#39;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    shopdict:&#123;</span><br><span class="line">        women:&#39;女人&#39;,</span><br><span class="line">        men:&#39;男人&#39;,</span><br><span class="line">        girl:&#39;女孩&#39;,</span><br><span class="line">        boy:&#39;男孩&#39;,</span><br><span class="line">    &#125;,</span><br><span class="line">    pagesdict:&#123;</span><br><span class="line">        homepage:&#39;主页&#39;,</span><br><span class="line">        catalog:&#39;目录&#39;,</span><br><span class="line">        itemdetail:&#39;详情&#39;,</span><br><span class="line">        cart:&#39;购物车&#39;,</span><br><span class="line">        contact:&#39;联系&#39;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>en.js(英文语言包)<br>按照自己实际要求来设置变量</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;双语规范的变量(英文)</span><br><span class="line"></span><br><span class="line">export const m &#x3D; &#123;</span><br><span class="line"></span><br><span class="line">    index:&#39;Mei Duo Shop&#39;,</span><br><span class="line">    home:&#39;Home&#39;,</span><br><span class="line">    shop:&#39;Shop&#39;,</span><br><span class="line">    pages:&#39;Pages&#39;,</span><br><span class="line">    contact:&#39;Contact&#39;,</span><br><span class="line">    welcome:&#39;Welcome&#39;,</span><br><span class="line">    login:&#39;Login&#39;,</span><br><span class="line">    logout:&#39;Logout&#39;,</span><br><span class="line">    register:&#39;Register&#39;,</span><br><span class="line"></span><br><span class="line">    chinese:&#39;Chinese&#39;,</span><br><span class="line">    english:&#39;English&#39;,</span><br><span class="line"></span><br><span class="line">    login:&#39;login&#39;,</span><br><span class="line">    register:&#39;register&#39;,</span><br><span class="line"></span><br><span class="line">    logout: &#39;logout&#39;,</span><br><span class="line"></span><br><span class="line">    Welcome: &#39;Welcome&#39;,</span><br><span class="line"></span><br><span class="line">    xiaowang:&#39;xiaowang&#39;,</span><br><span class="line"></span><br><span class="line">    shopdict:&#123;</span><br><span class="line">        women:&quot;WOMEN&#39;S&quot;,</span><br><span class="line">        men:&quot;MEN&#39;S&quot;,</span><br><span class="line">        girl:&quot;GIRL&#39;S&quot;,</span><br><span class="line">        boy:&quot;BOY&#39;S&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">    pagesdict:&#123;</span><br><span class="line">        homepage:&#39;Homepage&#39;,</span><br><span class="line">        catalog:&#39;Catalog&#39;,</span><br><span class="line">        itemdetail:&#39;Item Detail&#39;,</span><br><span class="line">        cart:&#39;Cart&#39;,</span><br><span class="line">        contact:&#39;Contact&#39;</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li><p>配置完成后我们就可以在项目中应用了<br>需要修改哪些变量直接使用语法修改即可,如图所示<br><img src="https://i.loli.net/2020/05/08/PuMrO5XgQx7DsTn.png" alt></p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;div&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">            # 在项目中创建一个中英文切换按钮 提高用户体验</span><br><span class="line">            &lt;!--中英切换开关--&gt;</span><br><span class="line">            </span><br><span class="line">            &lt;h-switch @change&#x3D;&quot;lang_change&quot; v-model&#x3D;&quot;lang&quot; &gt;&#123;&#123; $t(&#39;m.chinese&#39;) &#125;&#125;&#x2F;&#123;&#123; $t(&#39;m.english&#39;) &#125;&#125;&lt;&#x2F;h-switch&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;&#x2F;div&gt;</span><br><span class="line">	&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">	export default&#123;</span><br><span class="line">		&#x2F;&#x2F;定义数据</span><br><span class="line">		data()&#123;</span><br><span class="line"></span><br><span class="line">			return &#123;</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;中英文切换</span><br><span class="line">				lang:1,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;钩子方法 </span><br><span class="line">		mounted:function()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			var lang_locale &#x3D; localStorage.getItem(&quot;lang&quot;);</span><br><span class="line"></span><br><span class="line">			if(lang_locale)&#123;</span><br><span class="line"></span><br><span class="line">				this.$i18n.locale &#x3D; lang_locale;</span><br><span class="line"></span><br><span class="line">				if(lang_locale &#x3D;&#x3D; &#39;zh&#39;)&#123;</span><br><span class="line"></span><br><span class="line">					this.lang &#x3D; 1;</span><br><span class="line"></span><br><span class="line">				&#125;else&#123;</span><br><span class="line">					this.lang &#x3D; 0;</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;else&#123;</span><br><span class="line"></span><br><span class="line">				this.$i18n.locale &#x3D; &#39;zh&#39;;</span><br><span class="line">				this.lang &#x3D; 1;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line">		methods:&#123;</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;切换语言</span><br><span class="line">			lang_change:function()&#123;</span><br><span class="line"></span><br><span class="line">				console.log(this.lang);</span><br><span class="line"></span><br><span class="line">				if(this.lang &#x3D;&#x3D; true)&#123;</span><br><span class="line"></span><br><span class="line">					&#x2F;&#x2F;中文</span><br><span class="line">					this.$i18n.locale &#x3D; &quot;zh&quot;;</span><br><span class="line">					localStorage.setItem(&quot;lang&quot;,&#39;zh&#39;);</span><br><span class="line"></span><br><span class="line">				&#125;else&#123;</span><br><span class="line"></span><br><span class="line">					&#x2F;&#x2F;英文</span><br><span class="line">					this.$i18n.locale &#x3D; &quot;en&quot;;</span><br><span class="line">					localStorage.setItem(&quot;lang&quot;,&#39;en&#39;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">			&#125;,</span><br><span class="line"></span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Vue国际化语言操作</category>
      </categories>
  </entry>
  <entry>
    <title>第十四篇文章</title>
    <url>/2020/05/09/day13/</url>
    <content><![CDATA[<ul>
<li><p>在vue组件样式找到需要修改的文件</p>
<a id="more"></a>
<p><img src="https://i.loli.net/2020/05/10/XypzZwJG6jKmbao.png" alt></p>
</li>
<li><p>在文件中将字体修改为自定义变量<br><img src="https://i.loli.net/2020/05/10/xRsWLBq1cFwarfj.png" alt></p>
</li>
<li><p>将页面颜色修改为自定义变量<br><img src="https://i.loli.net/2020/05/10/ndvrolDN9SGh8FE.png" alt></p>
</li>
<li><p>vue具体代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;div&gt;</span><br><span class="line">			&lt;div&gt;</span><br><span class="line"></span><br><span class="line">				&lt;!--白昼与暗夜模式开关--&gt;</span><br><span class="line"></span><br><span class="line">				&lt;h-switch @change&#x3D;&quot;change_back&quot; v-model&#x3D;&quot;anye&quot;&gt;&#123;&#123; $t(&#39;m.daytime&#39;) &#125;&#125;&#x2F;&#123;&#123; $t(&#39;m.night&#39;) &#125;&#125;&lt;&#x2F;h-switch&gt;</span><br><span class="line"></span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">	&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">	export default&#123;</span><br><span class="line">		&#x2F;&#x2F;定义数据</span><br><span class="line">		data()&#123;</span><br><span class="line"></span><br><span class="line">			return &#123;</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;用户名</span><br><span class="line">				username:&#39;&#39;,</span><br><span class="line">				&#x2F;&#x2F;中英文切换</span><br><span class="line">				lang:1,</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;暗夜默认变量</span><br><span class="line">				anye:1,</span><br><span class="line">				</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;钩子方法 </span><br><span class="line">		mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;调用暗夜方法</span><br><span class="line">			this.ifanye();</span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line">		methods:&#123;</span><br><span class="line"></span><br><span class="line">			ifanye()&#123;</span><br><span class="line"></span><br><span class="line">				var backanye &#x3D; localStorage.getItem(&#39;backanye&#39;)</span><br><span class="line"></span><br><span class="line">                </span><br><span class="line">                 &#x2F;&#x2F;判断暗夜点击按钮</span><br><span class="line">				if(backanye !&#x3D; &#39;1&#39;)&#123;</span><br><span class="line">					this.anye &#x3D; 0;</span><br><span class="line">					this.change_back()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line">				&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				  &#x2F;&#x2F;切换主题颜色</span><br><span class="line">			change_back:function()&#123;</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;白昼模式</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;获取样式表</span><br><span class="line">				var styles &#x3D; getComputedStyle(document.documentElement);</span><br><span class="line"></span><br><span class="line">				if(this.anye &#x3D;&#x3D; 1)&#123;</span><br><span class="line"></span><br><span class="line">					&#x2F;&#x2F;动态更改</span><br><span class="line">					document.documentElement.style.setProperty(&quot;--bg-color&quot;,&quot;white&quot;);</span><br><span class="line"></span><br><span class="line">					&#x2F;&#x2F;字体颜色</span><br><span class="line">					document.documentElement.style.setProperty(&quot;--a-color&quot;,&quot;black&quot;);</span><br><span class="line"></span><br><span class="line">					localStorage.setItem(&#39;backanye&#39;,&#39;1&#39;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&#125;else&#123;</span><br><span class="line"></span><br><span class="line">					&#x2F;&#x2F;暗夜模式</span><br><span class="line"></span><br><span class="line">					&#x2F;&#x2F;动态更改</span><br><span class="line">					document.documentElement.style.setProperty(&quot;--bg-color&quot;,&quot;#292a2d&quot;);</span><br><span class="line"></span><br><span class="line">					&#x2F;&#x2F;字体颜色</span><br><span class="line">					document.documentElement.style.setProperty(&quot;--a-color&quot;,&quot;white&quot;);</span><br><span class="line"></span><br><span class="line">					localStorage.setItem(&#39;backanye&#39;,&#39;0&#39;)</span><br><span class="line">				&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	  		&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>















</li>
</ul>
]]></content>
      <categories>
        <category>Vue实现白昼与暗夜模式</category>
      </categories>
  </entry>
  <entry>
    <title>第十五篇文章</title>
    <url>/2020/05/11/day14/</url>
    <content><![CDATA[<ul>
<li><p>Django具体代码</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 商品入库接口</span><br><span class="line">class InsertGoods(APIView):</span><br><span class="line">    def get(self,request):</span><br><span class="line"></span><br><span class="line">        # 接参</span><br><span class="line">        name &#x3D; request.GET.get(&#39;name&#39;,None)</span><br><span class="line"></span><br><span class="line">        price &#x3D; request.GET.get(&#39;price&#39;,None)</span><br><span class="line"></span><br><span class="line">        params &#x3D; request.GET.get(&#39;params&#39;,None)</span><br><span class="line"></span><br><span class="line">        cid &#x3D; request.GET.get(&#39;cid&#39;,None)</span><br><span class="line"></span><br><span class="line">        # 排重操作</span><br><span class="line">        goods &#x3D; Goods.objects.filter(name&#x3D;name).first()</span><br><span class="line"></span><br><span class="line">        if goods:</span><br><span class="line">            return Response(&#123;</span><br><span class="line">                &#39;code&#39;: 401,</span><br><span class="line">                &#39;message&#39;: &#39;已经添加过此商品&#39;</span><br><span class="line">            &#125;)</span><br><span class="line"></span><br><span class="line">        # 入库</span><br><span class="line"></span><br><span class="line">        goods &#x3D; Goods(name&#x3D;name,price&#x3D;price,params&#x3D;params,cid&#x3D;int(cid))</span><br><span class="line">        goods.save()</span><br><span class="line"></span><br><span class="line">        # 获取已存入的商品信息</span><br><span class="line">        goods &#x3D; Goods.objects.filter(name&#x3D;name).first()</span><br><span class="line">        # 存入redis中</span><br><span class="line">        r.set(goods.id,params)</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;code&#39;: 200,</span><br><span class="line">            &#39;message&#39;: &#39;添加商品成功&#39;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>注意写入url.py</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">urlpatterns &#x3D; [</span><br><span class="line">    #定义超链接路由</span><br><span class="line">    re_path(&#39;^static&#x2F;upload&#x2F;(?P&lt;path&gt;.*)$&#39;,serve,&#123;&#39;document_root&#39;:&#39;&#x2F;static&#x2F;upload&#x2F;&#39;&#125;),</span><br><span class="line">    path(&#39;insertgoods&#x2F;&#39;,InsertGoods.as_view()),</span><br><span class="line">    path(&#39;categorylist&#x2F;&#39;,CategoryList.as_view()),</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
<li><p>Vue具体代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&lt;myheader&gt;&lt;&#x2F;myheader&gt;</span><br><span class="line">	&lt;section class&#x3D;&quot;featured-block text-center&quot;&gt;</span><br><span class="line">		&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line"></span><br><span class="line">            &lt;br&gt;</span><br><span class="line">                        &lt;!-- 面包屑导航 --&gt;</span><br><span class="line">            &lt;Breadcrumb :datas&#x3D;&#39;datas&#39;&gt;&lt;&#x2F;Breadcrumb&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&lt;table&gt;</span><br><span class="line"></span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							商品分类:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;Select v-model&#x3D;&quot;selected&quot; :datas&#x3D;&quot;category&quot;&gt;&lt;&#x2F;Select&gt;</span><br><span class="line">					</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							商品名称:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;name&quot; placeholder&#x3D;&quot;请输入商品名称&quot;&gt;</span><br><span class="line">					</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							商品价格:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;number&quot; v-model&#x3D;&quot;price&quot;&gt;</span><br><span class="line">					</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line"></span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">                            颜色:</span><br><span class="line">                        &lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">                            &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;color&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">                            号码:</span><br><span class="line">                        &lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">                            &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;size&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">                            季节:</span><br><span class="line">                        &lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">                            &lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;season&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">                            </span><br><span class="line">                        &lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">                            &lt;Button @click&#x3D;&quot;submit&quot;&gt;添加商品&lt;&#x2F;Button&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">				&lt;&#x2F;table&gt;</span><br><span class="line"></span><br><span class="line">		&lt;&#x2F;div&gt;</span><br><span class="line">	&lt;&#x2F;section&gt;</span><br><span class="line">	&lt;myfooter&gt;&lt;&#x2F;myfooter&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">import myheader from &#39;.&#x2F;myheader&#39;</span><br><span class="line">import myfooter from &#39;.&#x2F;myfooter&#39;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;导入文件</span><br><span class="line">import &#123;config,formatXml&#125; from &#39;..&#x2F;config.js&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        msg: &quot;这是一个变量&quot;,</span><br><span class="line">        &#x2F;&#x2F;商品数据</span><br><span class="line">        categorylist:[],</span><br><span class="line">        &#x2F;&#x2F;分类默认选中</span><br><span class="line">        selected:&#39;手机&#39;,</span><br><span class="line">        &#x2F;&#x2F;名称</span><br><span class="line">        name:&#39;&#39;,</span><br><span class="line">        price:0,</span><br><span class="line">        color:&#39;&#39;,</span><br><span class="line">        size:&#39;&#39;,</span><br><span class="line">        season:&#39;&#39;,</span><br><span class="line">        &#x2F;&#x2F;商品分类</span><br><span class="line">        category:[&#39;手机&#39;,&#39;电脑&#39;,&#39;电器&#39;],</span><br><span class="line">	    &#x2F;&#x2F;面包屑导航变量</span><br><span class="line">	    datas:[&#123;title:&#39;首页&#39;,route:&#123;name:&#39;index&#39;&#125;&#125;,&#123;title:&#39;添加商品&#39;&#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F;注册组件标签</span><br><span class="line">  components:&#123;</span><br><span class="line">	  &#39;myheader&#39;:myheader,</span><br><span class="line">		&#39;myfooter&#39;:myfooter,</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F;调用分类接口</span><br><span class="line">      this.get_category();</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;获取商品分类</span><br><span class="line">     get_category:function()&#123;</span><br><span class="line"></span><br><span class="line">                     &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;categorylist&#x2F;&#39;).then((result)&#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">                console.log(result);</span><br><span class="line"></span><br><span class="line">                var mycate &#x3D; [];</span><br><span class="line"></span><br><span class="line">                &#x2F;&#x2F;二次处理</span><br><span class="line">                for(let i&#x3D;0;i&lt;result.data.length;i++)&#123;</span><br><span class="line"></span><br><span class="line">                    mycate.push(result.data[i][&#39;name&#39;]);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                &#x2F;&#x2F;赋值操作</span><br><span class="line">                this.category &#x3D; mycate;</span><br><span class="line">                this.categorylist &#x3D; result.data</span><br><span class="line">      </span><br><span class="line">			&#125;);</span><br><span class="line">     &#125;,</span><br><span class="line">      &#x2F;&#x2F;添加商品</span><br><span class="line">      submit:function()&#123;</span><br><span class="line"></span><br><span class="line">          &#x2F;&#x2F;获取分类对应id</span><br><span class="line">          var categorylist &#x3D; this.categorylist</span><br><span class="line"></span><br><span class="line">          for(let i&#x3D;0;i&lt;this.categorylist.length;i++)&#123;</span><br><span class="line"></span><br><span class="line">              if(categorylist[i][&#39;name&#39;] &#x3D;&#x3D; this.selected)&#123;</span><br><span class="line">                  var cid &#x3D;categorylist[i][&#39;id&#39;]</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &#x2F;&#x2F;将普通字段转换为json</span><br><span class="line">          var param &#x3D; &#123;&#125;;</span><br><span class="line"></span><br><span class="line">          param[&#39;color&#39;] &#x3D; this.color;</span><br><span class="line">          param[&#39;size&#39;] &#x3D; this.size</span><br><span class="line">          param[&#39;season&#39;] &#x3D; this.season;</span><br><span class="line"></span><br><span class="line">          console.log(param)</span><br><span class="line"></span><br><span class="line">          &#x2F;&#x2F;转换字符串</span><br><span class="line">          param &#x3D; JSON.stringify(param)</span><br><span class="line"></span><br><span class="line">          console.log(param);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;insertgoods&#x2F;&#39;,&#123;params:&#123;name:this.name,price:this.price,cid:cid,params:param&#125;&#125;).then((result)&#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">                console.log(result)</span><br><span class="line"></span><br><span class="line">                this.$Message(result.data.message);</span><br><span class="line">            </span><br><span class="line">			&#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">td&#123;</span><br><span class="line">	padding:10px</span><br><span class="line">&#125;</span><br><span class="line">.imgcode &#123;</span><br><span class="line">	cursor: pointer;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>最后一步组件注册</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import addgoods from &#39;@&#x2F;components&#x2F;addgoods&#39;</span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line">var routes &#x3D; [</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line">          path:&#39;&#x2F;addgoods&#39;,</span><br><span class="line">          name:&#39;addgoods&#39;,</span><br><span class="line">          component:addgoods</span><br><span class="line">        &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>



</li>
</ul>
]]></content>
      <categories>
        <category>Django+Vue商品入库</category>
      </categories>
  </entry>
  <entry>
    <title>第十六篇文章</title>
    <url>/2020/05/12/day15/</url>
    <content><![CDATA[<h3 id="Django代码"><a href="#Django代码" class="headerlink" title="Django代码"></a>Django代码</h3><ul>
<li>在需要分页的视图中添加分页逻辑<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 商品列表页</span><br><span class="line">class GoodsList(APIView):</span><br><span class="line">    def get(self,request):</span><br><span class="line"></span><br><span class="line">        # 当前页</span><br><span class="line">        page &#x3D; request.GET.get(&#39;page&#39;,1)</span><br><span class="line"></span><br><span class="line">        # 一页显示个数</span><br><span class="line">        size &#x3D; request.GET.get(&#39;size&#39;,3)</span><br><span class="line"></span><br><span class="line">        # 计算从哪开始切</span><br><span class="line">        data_start &#x3D; (int(page)-1) * int(size)</span><br><span class="line"></span><br><span class="line">        # 计算切到哪</span><br><span class="line">        data_end &#x3D; int(page) * int(size)</span><br><span class="line"></span><br><span class="line">        # 查询  切片操作</span><br><span class="line">        good &#x3D; Goods.objects.all()[data_start:data_end]</span><br><span class="line"></span><br><span class="line">        # 查询所有商品个数</span><br><span class="line">        count &#x3D; Goods.objects.count()</span><br><span class="line"></span><br><span class="line">        # 序列化</span><br><span class="line">        goods_ser &#x3D; GoodsSer(good,many&#x3D;True)</span><br><span class="line"></span><br><span class="line">        return Response(&#123;&#39;data&#39;:goods_ser.data,&#39;total&#39;:count&#125;)</span><br></pre></td></tr></table></figure>
<h3 id="Vue代码"><a href="#Vue代码" class="headerlink" title="Vue代码"></a>Vue代码</h3></li>
<li>在商品展示组件中添加<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">	  &lt;myheader&gt;&lt;&#x2F;myheader&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;div id&#x3D;&quot;carousel&quot; class&#x3D;&quot;carousel slide&quot; data-ride&#x3D;&quot;carousel&quot;&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;&#x2F;div&gt;</span><br><span class="line">	</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">		</span><br><span class="line">		&lt;section class&#x3D;&quot;products text-center&quot;&gt;</span><br><span class="line">			&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">				&lt;h3 class&#x3D;&quot;mb-4&quot;&gt;商品列表&lt;&#x2F;h3&gt;</span><br><span class="line">				&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">					&lt;div v-for&#x3D;&quot;item in goodslist&quot; class&#x3D;&quot;col-sm-6 col-md-3 col-product&quot;&gt;</span><br><span class="line">						&lt;figure&gt;</span><br><span class="line">							&lt;img class&#x3D;&quot;rounded-corners img-fluid&quot; :src&#x3D;&quot;&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;static&#x2F;upload&#x2F;&#39;+item.img&quot; width&#x3D;&quot;240&quot; height&#x3D;&quot;240&quot;&gt;</span><br><span class="line">							&lt;figcaption&gt;</span><br><span class="line">								&lt;div class&#x3D;&quot;thumb-overlay&quot;&gt;&lt;a href&#x3D;&quot;item.html&quot; title&#x3D;&quot;More Info&quot;&gt;</span><br><span class="line">									&lt;i class&#x3D;&quot;fas fa-search-plus&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">								&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">							&lt;&#x2F;figcaption&gt;</span><br><span class="line">						&lt;&#x2F;figure&gt;</span><br><span class="line">						&lt;h4&gt;&lt;a :href&#x3D;&quot;&#39;http:&#x2F;&#x2F;localhost:8080&#x2F;item?id&#x3D;&#39;+item.id&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;</span><br><span class="line">						&lt;p&gt;&lt;span class&#x3D;&quot;emphasis&quot;&gt;$&#123;&#123; item.price &#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br><span class="line">					&lt;&#x2F;div&gt;</span><br><span class="line">				</span><br><span class="line">				&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">			&lt;!--heyui分页逻辑--&gt;</span><br><span class="line">          &lt;br&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line"></span><br><span class="line">			&lt;Pagination v-model&#x3D;&quot;pagination&quot; @change&#x3D;&quot;get_goodslist&quot; &gt;&lt;&#x2F;Pagination&gt;</span><br><span class="line"></span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line">		&lt;&#x2F;section&gt;</span><br><span class="line">	</span><br><span class="line">		</span><br><span class="line">	&lt;myfooter&gt;&lt;&#x2F;myfooter&gt;</span><br><span class="line">    </span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">	  msg: &quot;这是一个变量&quot;,</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;商品列表</span><br><span class="line">	  goodslist:[],</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;分页器变量</span><br><span class="line">      pagination:&#123;</span><br><span class="line">        page:1,</span><br><span class="line">        size:3,</span><br><span class="line">        total:5</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">	  this.get_goodslist();</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;分页方法</span><br><span class="line">	&#x2F;&#x2F;   this.goodspage();</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;   &#x2F;&#x2F;黑&#x2F;白模式切换</span><br><span class="line">	&#x2F;&#x2F;   this.change_back();</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">  </span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;获取商品</span><br><span class="line">     get_goodslist:function()&#123;</span><br><span class="line"></span><br><span class="line">                     &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;goodslist&#x2F;&#39;,&#123;params:&#123;page:this.pagination.page,size:this.pagination.size&#125;&#125;).then((result)&#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">				console.log(result);</span><br><span class="line">				</span><br><span class="line">				this.goodslist &#x3D; result.data.data;</span><br><span class="line">				this.pagination.total &#x3D; result.data.total;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">			&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>Django+Vue商品分页</category>
      </categories>
  </entry>
  <entry>
    <title>第十七篇文章</title>
    <url>/2020/05/13/day16/</url>
    <content><![CDATA[<ul>
<li><p>Django代码</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 商品详情页</span><br><span class="line">class GoodInfo(APIView):</span><br><span class="line">    def get(self,request):</span><br><span class="line"></span><br><span class="line">        id &#x3D; request.GET.get(&#39;id&#39;)</span><br><span class="line"></span><br><span class="line">        # 查询</span><br><span class="line">        good&#x3D; Goods.objects.get(id&#x3D;id)</span><br><span class="line"></span><br><span class="line">        # 序列化</span><br><span class="line">        good_ser &#x3D; GoodsSer(good)</span><br><span class="line">        </span><br><span class="line">        # redis 操作存入图片</span><br><span class="line">        # r.lpush(good.name,&#39;21.jpg&#39;)</span><br><span class="line">        # r.lpush(good.name,&#39;14.jpg&#39;)</span><br><span class="line">        # r.lpush(good.name,&#39;12.jpg&#39;)</span><br><span class="line">        # r.lpush(good.name,&#39;12.jpg&#39;)</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">        # 建立一个空列表  用以接收数据</span><br><span class="line">        re &#x3D; []</span><br><span class="line">        # 循环 数据   </span><br><span class="line">        # 用id会有问题   部分参数无法接收  再次修改为name</span><br><span class="line">        # for i in r.lrange(good.name,0,5):</span><br><span class="line">        for i in r.lrange(good.name,0,4):</span><br><span class="line">            # 以utf-8格式依此添加列表</span><br><span class="line">            print(i)</span><br><span class="line">            re.append(i.decode(&#39;utf-8&#39;))</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;data&#39;:good_ser.data,</span><br><span class="line">            &#39;re&#39;:re</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 商品列表页</span><br><span class="line">class GoodsList(APIView):</span><br><span class="line">    def get(self,request):</span><br><span class="line">        #排序字段</span><br><span class="line">        coloum &#x3D; request.GET.get(&#39;coloum&#39;,None)</span><br><span class="line">        #排序方法</span><br><span class="line">        sort_order &#x3D; request.GET.get(&#39;order&#39;,&#39;&#39;)</span><br><span class="line">        # 当前页</span><br><span class="line">        page &#x3D; request.GET.get(&#39;page&#39;,1)</span><br><span class="line">        # 一页显示个数</span><br><span class="line">        size &#x3D; request.GET.get(&#39;size&#39;,3)</span><br><span class="line"></span><br><span class="line">        # 计算从哪开始切</span><br><span class="line">        data_start &#x3D; (int(page)-1) * int(size)</span><br><span class="line"></span><br><span class="line">        # 计算切到哪</span><br><span class="line">        data_end &#x3D; int(page) * int(size)</span><br><span class="line"></span><br><span class="line">        # 查询  切片操作</span><br><span class="line">        if coloum:</span><br><span class="line"></span><br><span class="line">            goods &#x3D; Goods.objects.all().order_by(sort_order+coloum)[data_start:data_end]</span><br><span class="line">        else:</span><br><span class="line">            goods &#x3D; Goods.objects.all()[data_start:data_end]</span><br><span class="line"></span><br><span class="line">        # 查询所有商品个数</span><br><span class="line">        count &#x3D; Goods.objects.count()</span><br><span class="line"></span><br><span class="line">        # 序列化</span><br><span class="line">        goods_ser &#x3D; GoodsSer(goods,many&#x3D;True)</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line"></span><br><span class="line">            &#39;data&#39;:goods_ser.data,</span><br><span class="line">            &#39;total&#39;:count</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Vue代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">	&lt;section class&#x3D;&quot;products text-center&quot;&gt;</span><br><span class="line">			&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">				&lt;h3 class&#x3D;&quot;mb-4&quot;&gt;商品列表&lt;&#x2F;h3&gt;</span><br><span class="line">				&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">					&lt;div v-for&#x3D;&quot;item in goodslist&quot; class&#x3D;&quot;col-sm-6 col-md-3 col-product&quot;&gt;</span><br><span class="line">						&lt;figure&gt;</span><br><span class="line">							&lt;img class&#x3D;&quot;rounded-corners img-fluid&quot; :src&#x3D;&quot;&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;static&#x2F;upload&#x2F;&#39;+item.img&quot; width&#x3D;&quot;240&quot; height&#x3D;&quot;240&quot;&gt;</span><br><span class="line">							&lt;figcaption&gt;</span><br><span class="line">								&lt;div class&#x3D;&quot;thumb-overlay&quot;&gt;&lt;a href&#x3D;&quot;item.html&quot; title&#x3D;&quot;More Info&quot;&gt;</span><br><span class="line">									&lt;i class&#x3D;&quot;fas fa-search-plus&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">								&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">							&lt;&#x2F;figcaption&gt;</span><br><span class="line">						&lt;&#x2F;figure&gt;</span><br><span class="line">						&lt;h4&gt;&lt;a :href&#x3D;&quot;&#39;http:&#x2F;&#x2F;localhost:8080&#x2F;item?id&#x3D;&#39;+item.id&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;</span><br><span class="line">						&lt;p&gt;&lt;span class&#x3D;&quot;emphasis&quot;&gt;$&#123;&#123; item.price &#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br><span class="line">					&lt;&#x2F;div&gt;</span><br><span class="line">				</span><br><span class="line">				&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">			&lt;!--heyui分页逻辑--&gt;</span><br><span class="line">          &lt;br&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!-- &lt;Pagination v-model&#x3D;&quot;pagination&quot; @change&#x3D;&quot;change&quot;  layout&#x3D;&quot;pager,jumper&quot; small&gt;&lt;&#x2F;Pagination&gt; --&gt;</span><br><span class="line"></span><br><span class="line">			&lt;Pagination v-model&#x3D;&quot;pagination&quot; layout&#x3D;&quot;pager,jumper&quot; @change&#x3D;&quot;get_goodslist&quot; small&gt;&lt;&#x2F;Pagination&gt;</span><br><span class="line"></span><br><span class="line">			&lt;br&gt;</span><br><span class="line">			</span><br><span class="line"></span><br><span class="line">          &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">		  					  	&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">				&lt;div v-for&#x3D;&quot;item in goodslist_self&quot; class&#x3D;&quot;col-sm-6 col-md-3 col-product&quot;&gt;</span><br><span class="line">					&lt;figure&gt;</span><br><span class="line">						&lt;img class&#x3D;&quot;rounded-corners img-fluid&quot; :src&#x3D;&quot;&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;static&#x2F;upload&#x2F;&#39;+item.img&quot; width&#x3D;&quot;240&quot; height&#x3D;&quot;240&quot;&gt;</span><br><span class="line">						&lt;figcaption&gt;</span><br><span class="line">							&lt;div class&#x3D;&quot;thumb-overlay&quot;&gt;&lt;a href&#x3D;&quot;item.html&quot; title&#x3D;&quot;More Info&quot;&gt;</span><br><span class="line">								&lt;i class&#x3D;&quot;fas fa-search-plus&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">							&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">						&lt;&#x2F;figcaption&gt;</span><br><span class="line">					&lt;&#x2F;figure&gt;</span><br><span class="line">					&lt;h4&gt;&lt;a :href&#x3D;&quot;&#39;http:&#x2F;&#x2F;localhost:8080&#x2F;item?id&#x3D;&#39;+item.id&quot;&gt;&#123;&#123; item.name &#125;&#125;&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;</span><br><span class="line">					&lt;p&gt;&lt;span class&#x3D;&quot;emphasis&quot;&gt;$&#123;&#123; item.price &#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br><span class="line">				&lt;&#x2F;div&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line">							&lt;!--自主分页容器--&gt;</span><br><span class="line">				&lt;div&gt;</span><br><span class="line"></span><br><span class="line">				&lt;a @click&#x3D;&quot;get_goods_self(1)&quot; &gt;首页&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&lt;Button v-show&#x3D;&quot;lastpage&quot; @click&#x3D;&quot;get_goods_self(lastpage)&quot;&gt;上一页&lt;&#x2F;Button&gt;</span><br><span class="line"></span><br><span class="line">				&amp;emsp;&amp;emsp;</span><br><span class="line"></span><br><span class="line">				&lt;!-- &lt;span v-for&#x3D;&quot;index in allpage&quot;&gt;</span><br><span class="line">					</span><br><span class="line">					&lt;a @click&#x3D;&quot;get_goods_self(index)&quot;  &gt;&#123;&#123; index &#125;&#125;&lt;&#x2F;a&gt;&amp;emsp;&amp;emsp;</span><br><span class="line"></span><br><span class="line">				&lt;&#x2F;span&gt; --&gt;</span><br><span class="line"></span><br><span class="line">				&lt;span v-for&#x3D;&quot;item in last_page&quot;&gt;</span><br><span class="line">					</span><br><span class="line">					&lt;a @click&#x3D;&quot;get_goods_self(item)&quot;  &gt;&#123;&#123; item &#125;&#125;&lt;&#x2F;a&gt;&amp;emsp;&amp;emsp;</span><br><span class="line"></span><br><span class="line">				&lt;&#x2F;span&gt;</span><br><span class="line"></span><br><span class="line">				&amp;emsp;&amp;emsp;</span><br><span class="line"></span><br><span class="line">				&lt;a @click&#x3D;&quot;get_goods_self(page)&quot;  &gt;&#123;&#123; page &#125;&#125;&lt;&#x2F;a&gt;&amp;emsp;&amp;emsp;</span><br><span class="line">								</span><br><span class="line">				&amp;emsp;&amp;emsp;</span><br><span class="line">				&lt;span v-for&#x3D;&quot;item in next_page&quot;&gt;</span><br><span class="line">					</span><br><span class="line">					&lt;a @click&#x3D;&quot;get_goods_self(item)&quot;  &gt;&#123;&#123; item &#125;&#125;&lt;&#x2F;a&gt;&amp;emsp;&amp;emsp;</span><br><span class="line"></span><br><span class="line">				&lt;&#x2F;span&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&amp;emsp;&amp;emsp;</span><br><span class="line"></span><br><span class="line">				&lt;Button v-show&#x3D;&quot;nextpage&quot; @click&#x3D;&quot;get_goods_self(nextpage)&quot;&gt;下一页&lt;&#x2F;Button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">				&lt;a @click&#x3D;&quot;get_goods_self(allpage)&quot;  &gt;尾页&lt;&#x2F;a&gt;</span><br><span class="line">				&lt;div&gt;</span><br><span class="line"></span><br><span class="line">				&lt;Button @click&#x3D;&quot;get_goods_self(page,&#39;price&#39;,&#39;&#39;)&quot;&gt;按价格排序&lt;&#x2F;Button&gt;</span><br><span class="line">				&lt;Button @click&#x3D;&quot;get_goods_self(page,&#39;crerta_time&#39;,&#39;&#39;)&quot;&gt;按创建时间排序&lt;&#x2F;Button&gt;</span><br><span class="line">				&lt;&#x2F;div&gt;	</span><br><span class="line">				&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">		&lt;&#x2F;section&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">import myheader from &#39;.&#x2F;myheader&#39;</span><br><span class="line">import myfooter from &#39;.&#x2F;myfooter&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">	  msg: &quot;这是一个变量&quot;,</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;商品列表</span><br><span class="line">	  goodslist:[],</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;自主分页</span><br><span class="line">      goodslist_self:[],</span><br><span class="line">      &#x2F;&#x2F;商品总数</span><br><span class="line">      total_self:0,</span><br><span class="line">      &#x2F;&#x2F;上一页</span><br><span class="line">      lastpage:0,</span><br><span class="line">      &#x2F;&#x2F;下一页</span><br><span class="line">      nextpage:0,</span><br><span class="line">      &#x2F;&#x2F;当前页</span><br><span class="line">      page:1,</span><br><span class="line">      &#x2F;&#x2F;总页数</span><br><span class="line">      allpage:0,</span><br><span class="line">      &#x2F;&#x2F;每页展示数</span><br><span class="line">	  size:1,</span><br><span class="line">	  </span><br><span class="line">	  &#x2F;&#x2F;分页偏移</span><br><span class="line">	  last_page:[],</span><br><span class="line">	  next_page:[],</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;分页排序</span><br><span class="line">	  order:&#39;&#39;,</span><br><span class="line">	  coloum:&#39;&#39;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">	  this.get_goodslist();</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;自主分页</span><br><span class="line">	  this.get_goods_self(1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;价格排序</span><br><span class="line">	  price_order(coloum)&#123;</span><br><span class="line">		  this.coloum&#x3D;coloum;</span><br><span class="line">		  this.get_goods_self(this.page)</span><br><span class="line"></span><br><span class="line">	  &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;获取商品</span><br><span class="line">     get_goodslist:function()&#123;</span><br><span class="line"></span><br><span class="line">                     &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;goodslist&#x2F;&#39;,&#123;params:&#123;page:this.pagination.page,size:this.pagination.size&#125;&#125;).then((result)&#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">				</span><br><span class="line">				</span><br><span class="line">				this.goodslist &#x3D; result.data.data;</span><br><span class="line">				this.pagination.total &#x3D; result.data.total;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">			&#125;);</span><br><span class="line"></span><br><span class="line">	 &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;自主分页</span><br><span class="line">    get_goods_self:function(page,order,coloum)&#123;</span><br><span class="line"></span><br><span class="line">		this.page &#x3D; page</span><br><span class="line"></span><br><span class="line">		var coloum &#x3D; coloum</span><br><span class="line">		var order &#x3D; order</span><br><span class="line"></span><br><span class="line">		if(coloum||order)&#123;</span><br><span class="line">			this.coloum &#x3D; coloum</span><br><span class="line">			this.order &#x3D; order</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F; console.log(this.coloum)</span><br><span class="line">		&#x2F;&#x2F; console.log(this.order)</span><br><span class="line"></span><br><span class="line">      &#x2F;&#x2F;发送请求</span><br><span class="line">      this.axios.get(&#39;http:&#x2F;&#x2F;localhost:8000&#x2F;goodslist&#x2F;&#39;,&#123;params:&#123;page:page,size:this.size,coloum:this.coloum,order:this.order&#125;&#125;).then((result) &#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        this.goodslist_self &#x3D; result.data.data;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;商品总数</span><br><span class="line">        this.total_self&#x3D; result.data.total;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;判断上一页</span><br><span class="line">        if(page&#x3D;&#x3D;1)&#123;</span><br><span class="line">        	this.lastpage &#x3D; 0;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">        	this.lastpage &#x3D; page - 1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;计算总页数</span><br><span class="line">		this.allpage &#x3D; Math.ceil(this.total_self &#x2F; this.size);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;判断下一页</span><br><span class="line">        if(page &#x3D;&#x3D; this.allpage)&#123;</span><br><span class="line">        		this.nextpage &#x3D; 0;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">        		this.nextpage &#x3D; page + 1;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;设置偏移量</span><br><span class="line">		var move_page &#x3D; 2;</span><br><span class="line"></span><br><span class="line">		var my_last &#x3D; [];</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;计算左侧偏移量</span><br><span class="line">		for (let i&#x3D;page-move_page;i&lt;page;i++)&#123;</span><br><span class="line"></span><br><span class="line">			if(i &gt; 0)&#123;</span><br><span class="line">				my_last.push(i);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;计算右侧偏移量</span><br><span class="line"></span><br><span class="line">		var my_next &#x3D; [];</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;计算左侧偏移量</span><br><span class="line">		for (let i&#x3D;page+1;i&lt;&#x3D;page+move_page;i++)&#123;</span><br><span class="line"></span><br><span class="line">			if(i &lt;&#x3D; this.allpage)&#123;</span><br><span class="line">				my_next.push(i);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F; console.log(my_next);</span><br><span class="line">		&#x2F;&#x2F; console.log(my_last);</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">		this.last_page &#x3D; my_last;</span><br><span class="line">		this.next_page &#x3D; my_next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#125;); </span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>Django+Vue分页排序</category>
      </categories>
  </entry>
  <entry>
    <title>第十八篇文章</title>
    <url>/2020/05/14/day17/</url>
    <content><![CDATA[<ul>
<li>Django代码<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 商品列表页</span><br><span class="line">class GoodsList(APIView):</span><br><span class="line">    def get(self,request):</span><br><span class="line"></span><br><span class="line">        # 检索字段</span><br><span class="line">        text &#x3D; request.GET.get(&#39;text&#39;,None)</span><br><span class="line"></span><br><span class="line">        print(text)</span><br><span class="line">        #排序字段</span><br><span class="line">        coloum &#x3D; request.GET.get(&#39;coloum&#39;,None)</span><br><span class="line">        #排序方法</span><br><span class="line">        sort_order &#x3D; request.GET.get(&#39;order&#39;,&#39;&#39;)</span><br><span class="line">        # 当前页</span><br><span class="line">        page &#x3D; request.GET.get(&#39;page&#39;,1)</span><br><span class="line">        # 一页显示个数</span><br><span class="line">        size &#x3D; request.GET.get(&#39;size&#39;,3)</span><br><span class="line"></span><br><span class="line">        # 计算从哪开始切</span><br><span class="line">        data_start &#x3D; (int(page)-1) * int(size)</span><br><span class="line"></span><br><span class="line">        # 计算切到哪</span><br><span class="line">        data_end &#x3D; int(page) * int(size)</span><br><span class="line"></span><br><span class="line">        # 查询  切片操作</span><br><span class="line">        if coloum:</span><br><span class="line"></span><br><span class="line">            goods &#x3D; Goods.objects.all().order_by(sort_order+coloum)[data_start:data_end]</span><br><span class="line">        else:</span><br><span class="line">            goods &#x3D; Goods.objects.all()[data_start:data_end]</span><br><span class="line"></span><br><span class="line">       	#判断是否进行模糊查询</span><br><span class="line">        if text:</span><br><span class="line">            goods &#x3D; Goods.objects.filter(Q(name__contains&#x3D;text) | Q(desc__contains&#x3D;text) )[data_start:data_end]</span><br><span class="line"></span><br><span class="line">            count &#x3D; Goods.objects.filter(Q(name__contains&#x3D;text) | Q(desc__contains&#x3D;text)).count()</span><br><span class="line"></span><br><span class="line">        else:</span><br><span class="line"></span><br><span class="line">            #查询所有商品个数</span><br><span class="line">            count &#x3D; Goods.objects.count()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        # 序列化</span><br><span class="line">        goods_ser &#x3D; GoodsSer(goods,many&#x3D;True)</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line"></span><br><span class="line">            &#39;data&#39;:goods_ser.data,</span><br><span class="line">            &#39;total&#39;:count</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure></li>
<li>Vue代码搜索页面<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">	&lt;div&gt;</span><br><span class="line">    &lt;Search @search&#x3D;&quot;search&quot; v-model&#x3D;&quot;text&quot; &gt;&lt;&#x2F;Search&gt;</span><br><span class="line"></span><br><span class="line">	&lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">	export default&#123;</span><br><span class="line">		&#x2F;&#x2F;定义数据</span><br><span class="line">		data()&#123;</span><br><span class="line"></span><br><span class="line">			return &#123;</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;关键词变量</span><br><span class="line">				text:&#39;&#39;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line">		</span><br><span class="line">		&#x2F;&#x2F;在当前页面  检索功能如何实现</span><br><span class="line">		&#x2F;&#x2F;监听属性  检索页面变化   </span><br><span class="line">		watch:&#123;</span><br><span class="line">			$route(to,from)&#123;</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;手动刷新页面</span><br><span class="line">				this.$router.go(0);</span><br><span class="line">			&#125;</span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;钩子方法 </span><br><span class="line">		mounted:function()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		&#125;,</span><br><span class="line">		methods:&#123;</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;检索方法</span><br><span class="line">			search:function()&#123;</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;获取输入的关键词</span><br><span class="line">				console.log(this.text);</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;进行跳转操作 带着检索关键字跳转</span><br><span class="line">				this.$router.push(&#123;path:&#39;&#x2F;search&#39;,query:&#123;text:this.text&#125;&#125;);</span><br><span class="line"></span><br><span class="line">			&#125;,</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure></li>
<li>Vue检索跳转页面<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line"> </span><br><span class="line">	  &lt;myheader&gt;&lt;&#x2F;myheader&gt;</span><br><span class="line">		</span><br><span class="line">		&lt;div id&#x3D;&quot;carousel&quot; class&#x3D;&quot;carousel slide&quot; data-ride&#x3D;&quot;carousel&quot;&gt;</span><br><span class="line">	</span><br><span class="line">		&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">		&lt;section class&#x3D;&quot;products text-center&quot;&gt;</span><br><span class="line">			&lt;div class&#x3D;&quot;container&quot;&gt;</span><br><span class="line">				&lt;h3 class&#x3D;&quot;mb-4&quot;&gt;商品列表&lt;&#x2F;h3&gt;</span><br><span class="line">				&lt;div class&#x3D;&quot;row&quot;&gt;</span><br><span class="line">					&lt;div v-for&#x3D;&quot;item in goodslist&quot; class&#x3D;&quot;col-sm-6 col-md-3 col-product&quot;&gt;</span><br><span class="line">						&lt;figure&gt;</span><br><span class="line">							&lt;img class&#x3D;&quot;rounded-corners img-fluid&quot; :src&#x3D;&quot;&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;static&#x2F;upload&#x2F;&#39;+item.img&quot; width&#x3D;&quot;240&quot; height&#x3D;&quot;240&quot;&gt;</span><br><span class="line">							&lt;figcaption&gt;</span><br><span class="line">								&lt;div class&#x3D;&quot;thumb-overlay&quot;&gt;&lt;a href&#x3D;&quot;item.html&quot; title&#x3D;&quot;More Info&quot;&gt;</span><br><span class="line">									&lt;i class&#x3D;&quot;fas fa-search-plus&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">								&lt;&#x2F;a&gt;&lt;&#x2F;div&gt;</span><br><span class="line">							&lt;&#x2F;figcaption&gt;</span><br><span class="line">						&lt;&#x2F;figure&gt;</span><br><span class="line">						&lt;h4&gt;&lt;a :href&#x3D;&quot;&#39;http:&#x2F;&#x2F;localhost:8080&#x2F;item?id&#x3D;&#39;+item.id&quot;&gt;</span><br><span class="line">						&lt;div v-html&#x3D;&quot;item.name&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line">						&lt;&#x2F;a&gt;&lt;&#x2F;h4&gt;</span><br><span class="line">						&lt;p&gt;&lt;span class&#x3D;&quot;emphasis&quot;&gt;$&#123;&#123; item.price &#125;&#125;&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;</span><br><span class="line">					&lt;&#x2F;div&gt;</span><br><span class="line">				</span><br><span class="line">				&lt;&#x2F;div&gt;	</span><br><span class="line"></span><br><span class="line">			&lt;!--heyui分页逻辑--&gt;</span><br><span class="line">          &lt;br&gt;</span><br><span class="line">          &lt;div&gt;</span><br><span class="line">			&lt;Pagination v-model&#x3D;&quot;pagination&quot; layout&#x3D;&quot;pager,jumper&quot; @change&#x3D;&quot;get_goodslist&quot; small&gt;&lt;&#x2F;Pagination&gt;</span><br><span class="line"></span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">		&lt;&#x2F;section&gt;</span><br><span class="line">		</span><br><span class="line">	&lt;myfooter&gt;&lt;&#x2F;myfooter&gt;</span><br><span class="line">    </span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">  </span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&lt;script&gt;</span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">import myheader from &#39;.&#x2F;myheader&#39;</span><br><span class="line">import myfooter from &#39;.&#x2F;myfooter&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">	  msg: &quot;这是一个变量&quot;,</span><br><span class="line">	  &#x2F;&#x2F;检索关键字</span><br><span class="line">	  text:&#39;&#39;,</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;商品列表</span><br><span class="line">	  goodslist:[],</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;分页器变量</span><br><span class="line">      pagination:&#123;</span><br><span class="line">        page:1,</span><br><span class="line">        size:3,</span><br><span class="line">        total:2</span><br><span class="line">	  &#125;,</span><br><span class="line">	  </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">    &#x2F;&#x2F;注册组件标签</span><br><span class="line">  components:&#123;</span><br><span class="line">	  &#39;myheader&#39;:myheader,</span><br><span class="line">	  &#39;myfooter&#39;:myfooter,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">	  	  &#x2F;&#x2F;接收检索参数</span><br><span class="line">	  var text &#x3D; this.$route.query.text;  </span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;判断</span><br><span class="line">	  if(text.indexOf(&#39; &#39;))&#123;</span><br><span class="line">			  </span><br><span class="line">		text &#x3D; text.split(&quot; &quot;);</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;格式转换</span><br><span class="line">		text &#x3D; JSON.stringify(text);</span><br><span class="line"></span><br><span class="line">	  &#125;</span><br><span class="line"></span><br><span class="line">	  this.text &#x3D; text;</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;   console.log(text.split(&quot; &quot;));</span><br><span class="line"></span><br><span class="line">	  this.get_goodslist();</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">	&#x2F;&#x2F;获取商品</span><br><span class="line">     get_goodslist:function()&#123;</span><br><span class="line"></span><br><span class="line">                     &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;goodslist&#x2F;&#39;,&#123;params:&#123;page:this.pagination.page,size:this.pagination.size,text:this.text&#125;&#125;).then((result)&#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">				console.log(this.text);</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F; for(let i&#x3D;0;i&lt;result.data.data.length;i++)&#123;</span><br><span class="line">			&#x2F;&#x2F; 	result.data.data[i][&#39;name&#39;] &#x3D; result.data.data[i][&#39;name&#39;].replace(new RegExp(this.text,&#39;g&#39;),&#39;&lt;span class&#x3D;&quot;highlight&quot;&gt;&#39;+this.text+&#39;&lt;&#x2F;span&gt;&#39;);</span><br><span class="line">			&#x2F;&#x2F; 	&#125;</span><br><span class="line">				</span><br><span class="line">				this.goodslist &#x3D; result.data.data;</span><br><span class="line">				this.pagination.total &#x3D; result.data.total;</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line">			&#125;);</span><br><span class="line"></span><br><span class="line">	 &#125;,</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;style&gt;</span><br><span class="line">.highlight&#123;</span><br><span class="line">  color:yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Django+Vue实现检索功能</category>
      </categories>
  </entry>
  <entry>
    <title>第十九篇文章</title>
    <url>/2020/05/15/day18/</url>
    <content><![CDATA[<h3 id="Django"><a href="#Django" class="headerlink" title="Django"></a>Django</h3><ul>
<li>在models.py文件中新建一个表<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 基类 该表不会显示在数据库里</span><br><span class="line">class Base(models.Model):</span><br><span class="line"></span><br><span class="line">    # 创建时间</span><br><span class="line">    crerta_time &#x3D; models.DateTimeField(default&#x3D;timezone.now,null&#x3D;True)</span><br><span class="line"></span><br><span class="line">    class Meta:</span><br><span class="line">        abstract &#x3D; True</span><br><span class="line"></span><br><span class="line"># 商品评论表 继承基类</span><br><span class="line">class Comment(Base):</span><br><span class="line">    uid &#x3D; models.IntegerField()</span><br><span class="line">    content &#x3D; models.CharField(max_length&#x3D;200)</span><br><span class="line">    gid &#x3D; models.IntegerField()</span><br><span class="line">    # 声明表名</span><br><span class="line">    class Meta:</span><br><span class="line">        db_table &#x3D; &#39;comment&#39;</span><br></pre></td></tr></table></figure></li>
<li>在myser.py文件中将商品评论表序列化操作<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入需要序列化的表</span><br><span class="line">from myapp.models import *</span><br><span class="line"></span><br><span class="line"># 商品评论序列化</span><br><span class="line">class CommentSer(serializers.ModelSerializer):</span><br><span class="line"></span><br><span class="line">    class Meta:</span><br><span class="line">        model &#x3D; Comment</span><br><span class="line">        fields &#x3D; &quot;__all__&quot;</span><br></pre></td></tr></table></figure></li>
<li>在视图文件中导入models.py和myser.py文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 导入序列化类</span><br><span class="line">from myapp.myser import *</span><br><span class="line"># 导入models表</span><br><span class="line">from myapp.models import *</span><br><span class="line"></span><br><span class="line"># 商品评论</span><br><span class="line">class CommentInsert(APIView):</span><br><span class="line">    def post(self,request):</span><br><span class="line"></span><br><span class="line">        # 初始化参数</span><br><span class="line">        comment &#x3D; CommentSer(data&#x3D;request.data)</span><br><span class="line"></span><br><span class="line">        # 验证字段</span><br><span class="line">        if comment.is_valid():</span><br><span class="line"></span><br><span class="line">            # 进行入库</span><br><span class="line">            comment.save()</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;code&#39;:200,</span><br><span class="line">            &#39;message&#39;:&#39;评论成功&#39;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure></li>
<li>在url.py导入路由<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">urlpatterns &#x3D; [</span><br><span class="line">    </span><br><span class="line">       path(&#39;commentinsert&#x2F;&#39;,CommentInsert.as_view()),</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<h3 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h3></li>
<li>在需要的页面中加上评论功能<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">        &lt;!--商品评论--&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;textarea v-model&#x3D;&quot;comment&quot; rows&#x3D;&quot;10&quot; v-autosize v-wordcount&#x3D;&quot;100&quot;&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;&#x2F;textarea&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;Button @click&#x3D;&quot;submit&quot; color&#x3D;&quot;blue&quot;&gt;提交评论&lt;&#x2F;Button&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">import myheader from &#39;.&#x2F;myheader&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">	  msg: &quot;这是一个变量&quot;,</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;商品id</span><br><span class="line">	  id:&#39;&#39;,</span><br><span class="line">	  &#x2F;&#x2F;声明评论内容</span><br><span class="line">	  comment:&#39;&#39;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;注册组件标签</span><br><span class="line">  components:&#123;</span><br><span class="line">	  &#39;myheader&#39;:myheader,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line">	  &#x2F;&#x2F;获取商品id</span><br><span class="line">	  this.id &#x3D; this.$route.query.id;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;提交评论</span><br><span class="line">	  submit:function()&#123;</span><br><span class="line">		  if(this.comment&#x3D;&#x3D;&quot;&quot;)&#123;</span><br><span class="line"></span><br><span class="line">			  this.$Message(&#39;评论不能为空&#39;);</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line"></span><br><span class="line">		  this.comment &#x3D; this.comment.replace(&#x2F; &#x2F;g,&#39;&#39;);</span><br><span class="line"></span><br><span class="line">		  if(this.comment.length &gt; 100)&#123;</span><br><span class="line"></span><br><span class="line">			  this.$Message(&#39;超出字数限制&#39;);</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line"></span><br><span class="line">		  &#x2F;&#x2F;请求入库</span><br><span class="line">  		&#x2F;&#x2F;发送请求</span><br><span class="line">      this.axios.post(&#39;http:&#x2F;&#x2F;localhost:8000&#x2F;commentinsert&#x2F;&#39;,this.qs.stringify(&#123;uid:localStorage.getItem(&quot;uid&quot;),gid:this.id,content:this.comment&#125;)).then((result) &#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">        console.log(result);</span><br><span class="line"></span><br><span class="line">        this.$Message(result.data.message);</span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  	&#125;,</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
]]></content>
      <categories>
        <category>Django+Vue商品评论</category>
      </categories>
  </entry>
  <entry>
    <title>第二十篇文章</title>
    <url>/2020/05/18/day19/</url>
    <content><![CDATA[<ul>
<li><p>Django代码</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 商品评论</span><br><span class="line">class CommentInsert(APIView):</span><br><span class="line">    def post(self,request):</span><br><span class="line"></span><br><span class="line">        # 获取客户端IP</span><br><span class="line">        if &#39;HTTP_X_FORWARDED_FOR&#39; in request.META:</span><br><span class="line"></span><br><span class="line">            ip &#x3D; request.META.get(&#39;HTTP_X_FORWARDED_FOR&#39;)</span><br><span class="line">        else:</span><br><span class="line">            ip &#x3D; request.META.get(&#39;REMOTE_ADDR&#39;)</span><br><span class="line"></span><br><span class="line">        uid &#x3D; request.POST.get(&#39;uid&#39;,None)</span><br><span class="line"></span><br><span class="line">        if r.get(ip):</span><br><span class="line"></span><br><span class="line">        # if r.llen(ip) &gt; 3:</span><br><span class="line"></span><br><span class="line">            return Response(&#123;</span><br><span class="line">            &#39;code&#39;:400,</span><br><span class="line">            &#39;message&#39;:&#39;请稍候评论&#39;</span><br><span class="line">            &#125;)</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">        # 初始化参数</span><br><span class="line">        comment &#x3D; CommentSer(data&#x3D;request.data)</span><br><span class="line"></span><br><span class="line">        # 验证字段</span><br><span class="line">        if comment.is_valid():</span><br><span class="line"></span><br><span class="line">            # 进行入库</span><br><span class="line">            comment.save()</span><br><span class="line"></span><br><span class="line">            # 设置评论间隔时间</span><br><span class="line">            r.set(ip,&quot;123&quot;)</span><br><span class="line">            r.expire(ip,30)</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;code&#39;:200,</span><br><span class="line">            &#39;message&#39;:&#39;评论成功&#39;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>Vue代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line"></span><br><span class="line">					&lt;!--商品评论--&gt;</span><br><span class="line"></span><br><span class="line">					&lt;textarea v-model&#x3D;&quot;comment&quot; rows&#x3D;&quot;10&quot; v-autosize v-wordcount&#x3D;&quot;100&quot;&gt;</span><br><span class="line"></span><br><span class="line">					&lt;&#x2F;textarea&gt;</span><br><span class="line"></span><br><span class="line">					&lt;br&gt;</span><br><span class="line">					&lt;br&gt;</span><br><span class="line">					&lt;Button @click&#x3D;&quot;submit&quot; color&#x3D;&quot;blue&quot;&gt;提交评论&lt;&#x2F;Button&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">import myheader from &#39;.&#x2F;myheader&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">	  msg: &quot;这是一个变量&quot;,</span><br><span class="line">	&#x2F;&#x2F;建立小图列表</span><br><span class="line">	  re:[],</span><br><span class="line">	  &#x2F;&#x2F;商品id</span><br><span class="line">	  id:&#39;&#39;,</span><br><span class="line">	  &#x2F;&#x2F;商品详情</span><br><span class="line">	  info:&#123;&#125;,</span><br><span class="line">	  &#x2F;&#x2F;商品规格</span><br><span class="line">	  param:&#123;&#125;,</span><br><span class="line">	  &#x2F;&#x2F;图片地址</span><br><span class="line">	  mysrc:&#39;&#39;,</span><br><span class="line">	  &#x2F;&#x2F;声明评论内容</span><br><span class="line">	  comment:&#39;&#39;,</span><br><span class="line">	  &#x2F;&#x2F;评论列表</span><br><span class="line">	  commentlist:[],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">	filters:&#123;</span><br><span class="line"></span><br><span class="line">				&#x2F;&#x2F;自定义方法</span><br><span class="line">		myfilter:function(value)&#123;</span><br><span class="line"></span><br><span class="line">				if(value &#x3D;&#x3D; 1)</span><br><span class="line">				return &#39;小王&#39;</span><br><span class="line"></span><br><span class="line">				if(value &#x3D;&#x3D; 2)</span><br><span class="line">				return &#39;小明&#39;</span><br><span class="line"></span><br><span class="line">				if(value &#x3D;&#x3D; 12)</span><br><span class="line">				return &#39;迩旳様孑&#39;</span><br><span class="line"></span><br><span class="line">				else</span><br><span class="line">				return &#39;田帅康&#39;</span><br><span class="line">				</span><br><span class="line">				</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;注册组件标签</span><br><span class="line">  components:&#123;</span><br><span class="line">	  &#39;myheader&#39;:myheader,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;获取商品id</span><br><span class="line"></span><br><span class="line">	  this.id &#x3D; this.$route.query.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;获取商品评论</span><br><span class="line">	  this.get_comment();</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;获取商品评论</span><br><span class="line">	  get_comment:function()&#123;</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;发送请求</span><br><span class="line">			this.axios.get(&#39;http:&#x2F;&#x2F;localhost:8000&#x2F;commentlist&#x2F;&#39;,&#123;params:&#123;gid:this.id&#125;&#125;).then((result) &#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">			console.log(result);</span><br><span class="line"></span><br><span class="line">			&#x2F;&#x2F;赋值 后端传给前端空列表</span><br><span class="line">			this.commentlist &#x3D; result.data.data;</span><br><span class="line"></span><br><span class="line">			&#125;);</span><br><span class="line"></span><br><span class="line">	  &#125;,</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;提交评论</span><br><span class="line">	  submit:function()&#123;</span><br><span class="line">		  if(this.comment&#x3D;&#x3D;&quot;&quot;)&#123;</span><br><span class="line"></span><br><span class="line">			  this.$Message(&#39;评论不能为空&#39;);</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line"></span><br><span class="line">		  this.comment &#x3D; this.comment.replace(&#x2F; &#x2F;g,&#39;&#39;);</span><br><span class="line"></span><br><span class="line">		  if(this.comment.length &gt; 100)&#123;</span><br><span class="line"></span><br><span class="line">			  this.$Message(&#39;超出字数限制&#39;);</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line"></span><br><span class="line">		  &#x2F;&#x2F;请求入库</span><br><span class="line">  		&#x2F;&#x2F;发送请求</span><br><span class="line">      this.axios.post(&#39;http:&#x2F;&#x2F;localhost:8000&#x2F;commentinsert&#x2F;&#39;,this.qs.stringify(&#123;uid:localStorage.getItem(&quot;uid&quot;),gid:this.id,content:this.comment&#125;)).then((result) &#x3D;&gt;&#123;</span><br><span class="line"></span><br><span class="line">        console.log(result);</span><br><span class="line"></span><br><span class="line">        this.$Message(result.data.message);</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;在提交时调用接口 刷新网页   将评论实时更新到页面</span><br><span class="line">		&#x2F;&#x2F; this.get_comment();</span><br><span class="line"></span><br><span class="line">		&#x2F;&#x2F;添加评论数据 伪数据提交  是否入库成功 都可以展示出来   假数据刷新页面就不会显示了</span><br><span class="line">		this.commentlist.unshift(&#123;&#39;uid&#39;:localStorage.getItem(&#39;uid&#39;),&#39;content&#39;: this.comment&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  	&#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Django+Vue防止恶意评论</category>
      </categories>
  </entry>
  <entry>
    <title>售前第二天</title>
    <url>/2020/05/28/day20/</url>
    <content><![CDATA[<h1 id="day2售前知识总结"><a href="#day2售前知识总结" class="headerlink" title="day2售前知识总结"></a>day2售前知识总结</h1> <a id="more"></a>


<h2 id="首先必须知道公司大体岗位架构"><a href="#首先必须知道公司大体岗位架构" class="headerlink" title="首先必须知道公司大体岗位架构"></a>首先必须知道公司大体岗位架构</h2><h5 id="产品：把老板或者客户的产品架构变成一个真实的页面模板"><a href="#产品：把老板或者客户的产品架构变成一个真实的页面模板" class="headerlink" title="产品：把老板或者客户的产品架构变成一个真实的页面模板"></a>产品：把老板或者客户的产品架构变成一个真实的页面模板</h5><h5 id="开发：前端开发人员，后端开发人员（将产品实现的页面模板用代码变成一个可使用的APP或者软件）"><a href="#开发：前端开发人员，后端开发人员（将产品实现的页面模板用代码变成一个可使用的APP或者软件）" class="headerlink" title="开发：前端开发人员，后端开发人员（将产品实现的页面模板用代码变成一个可使用的APP或者软件）"></a>开发：前端开发人员，后端开发人员（将产品实现的页面模板用代码变成一个可使用的APP或者软件）</h5><h5 id="客服：负责接待来访客户或者是电话咨询的客人，客服根据客户的业务需求派出对应的售前工程师介绍产品"><a href="#客服：负责接待来访客户或者是电话咨询的客人，客服根据客户的业务需求派出对应的售前工程师介绍产品" class="headerlink" title="客服：负责接待来访客户或者是电话咨询的客人，客服根据客户的业务需求派出对应的售前工程师介绍产品"></a>客服：负责接待来访客户或者是电话咨询的客人，客服根据客户的业务需求派出对应的售前工程师介绍产品</h5><hr>
<h3 id="1-其次我们需要必须先了解什么是售前？"><a href="#1-其次我们需要必须先了解什么是售前？" class="headerlink" title="1.其次我们需要必须先了解什么是售前？"></a>1.其次我们需要必须先了解什么是售前？</h3><ol>
<li>售前服务是企业在顾客未接触产品之前所开展的一系列刺激顾客购买欲望的服务工作。售前服务的主要目的是协助客户做好工程规划和系统需求分析，使得我们的产品能够最大限度的满足用户需要</li>
<li>通俗讲的话就是协助销售人员将公司产品推销出去，售前工程师的主要工作围绕项目开展</li>
</ol>
<h4 id="2-售前有三大阶段"><a href="#2-售前有三大阶段" class="headerlink" title="2.售前有三大阶段"></a>2.售前有三大阶段</h4><ol>
<li>售前：与客户签合同前的阶段。主要有获取线索、与客户交流、提供项目的技术方案、应标、签合同等流程</li>
<li>售中：项目交付后的阶段。其中有需求评审、设计、开发、实施等流程</li>
<li>售后：项目交付后的阶段。大致包括维护、使用培训、技术支撑等流程</li>
</ol>
<h4 id="3-售前两大最主要的类型"><a href="#3-售前两大最主要的类型" class="headerlink" title="3.售前两大最主要的类型"></a>3.售前两大最主要的类型</h4><h5 id="产品型售前："><a href="#产品型售前：" class="headerlink" title="产品型售前："></a>产品型售前：</h5><h6 id="1-产品型售前（公司已经开发出产品，可以添加额外功能。小项目不需要投标）"><a href="#1-产品型售前（公司已经开发出产品，可以添加额外功能。小项目不需要投标）" class="headerlink" title="1.产品型售前（公司已经开发出产品，可以添加额外功能。小项目不需要投标）"></a>1.产品型售前（公司已经开发出产品，可以添加额外功能。小项目不需要投标）</h6><h6 id="2-硬件公司，如服务器、交换机厂商等"><a href="#2-硬件公司，如服务器、交换机厂商等" class="headerlink" title="2. 硬件公司，如服务器、交换机厂商等"></a>2. 硬件公司，如服务器、交换机厂商等</h6><h6 id="3-软件公司：CRM系统。MIS系统"><a href="#3-软件公司：CRM系统。MIS系统" class="headerlink" title="3.软件公司：CRM系统。MIS系统"></a>3.软件公司：CRM系统。MIS系统</h6><p>产品型售前就是公司已经有产品了，只需要协助销售将产品推销给客户</p>
<h5 id="方案型售前："><a href="#方案型售前：" class="headerlink" title="方案型售前："></a>方案型售前：</h5><h6 id="1-根据客户的需求来设计的产品，市场内并没有。我们来提供解决方案"><a href="#1-根据客户的需求来设计的产品，市场内并没有。我们来提供解决方案" class="headerlink" title="1.根据客户的需求来设计的产品，市场内并没有。我们来提供解决方案"></a>1.根据客户的需求来设计的产品，市场内并没有。我们来提供解决方案</h6><hr>
<h2 id="售前要懂有技术和能力"><a href="#售前要懂有技术和能力" class="headerlink" title="售前要懂有技术和能力"></a>售前要懂有技术和能力</h2><p>这里就不再详述。用一张思维导图更容易明白</p>
<p><img src="https://i.loli.net/2020/05/28/zZ9DTVsxMeqrupy.png" alt></p>
<hr>
<h3 id="售前常用的软件"><a href="#售前常用的软件" class="headerlink" title="售前常用的软件"></a>售前常用的软件</h3><ol>
<li>word：这是作为售前人员必备的软件之一</li>
<li>Excel：管理线索和需求时才会用到</li>
<li>PPT：这也是作为售前人员必备的软件之一</li>
<li>Visio: 用于画流程图，架构图的软件</li>
<li>MindMaster: 思维导图软件。可以帮自己整理思路等</li>
<li>有道云笔记：收藏资料和工作中遇到的难点</li>
<li>Axure：用于界面设计</li>
</ol>
<hr>
<h3 id="文字太多会造成视觉疲劳-这里就用思维导图来展示"><a href="#文字太多会造成视觉疲劳-这里就用思维导图来展示" class="headerlink" title="文字太多会造成视觉疲劳,这里就用思维导图来展示"></a>文字太多会造成视觉疲劳,这里就用思维导图来展示</h3><h4 id="售前的具体工作示意图"><a href="#售前的具体工作示意图" class="headerlink" title="售前的具体工作示意图"></a>售前的具体工作示意图</h4><p><img src="https://i.loli.net/2020/05/28/olgiLzY8QBwb3SU.png" alt></p>
<h4 id="售中具体工作示意图"><a href="#售中具体工作示意图" class="headerlink" title="售中具体工作示意图"></a>售中具体工作示意图</h4><p><img src="https://i.loli.net/2020/05/28/dIVXGU9zHqOs5a4.png" alt></p>
<h4 id="售后具体工作示意图"><a href="#售后具体工作示意图" class="headerlink" title="售后具体工作示意图"></a>售后具体工作示意图</h4><p><img src="https://i.loli.net/2020/05/28/gs7ln2Yy9GboF4R.png" alt></p>
<hr>
<h3 id="最后做个售前工程师大体工作的总结"><a href="#最后做个售前工程师大体工作的总结" class="headerlink" title="最后做个售前工程师大体工作的总结"></a>最后做个售前工程师大体工作的总结</h3><h5 id="售前人员要求具备一个技术人员和销售人员两方面的素质，具体如下："><a href="#售前人员要求具备一个技术人员和销售人员两方面的素质，具体如下：" class="headerlink" title="售前人员要求具备一个技术人员和销售人员两方面的素质，具体如下："></a>售前人员要求具备一个技术人员和销售人员两方面的素质，具体如下：</h5><p>● 具有比较全面技术专业知识。熟悉当前IT的技术发展方向。</p>
<p>● 熟悉自己的产品、熟悉本行业的业务、对本公司的开发能力、技术优势、劣势有比较清楚的认识。</p>
<p>● 熟悉本行业的技术、产品动向、发展方向，了解同类产品及其竞争对手的情况和特点。</p>
<p>● 能熟练使用文本和图形编辑器进行方案、标书的编写。</p>
<p>● 熟悉项目招投标的一般程序。</p>
<p>● 善于交流，有良好的沟通能力和技巧。</p>
]]></content>
      <categories>
        <category>售前</category>
      </categories>
  </entry>
  <entry>
    <title>售前第三天</title>
    <url>/2020/05/29/day21/</url>
    <content><![CDATA[<h2 id="day3售前知识总结"><a href="#day3售前知识总结" class="headerlink" title="day3售前知识总结"></a>day3售前知识总结</h2> <a id="more"></a>
<h3 id="第一题：售前得工作流程-不需要投标、需要投标"><a href="#第一题：售前得工作流程-不需要投标、需要投标" class="headerlink" title="第一题：售前得工作流程(不需要投标、需要投标)"></a>第一题：售前得工作流程(不需要投标、需要投标)</h3><h4 id="需要投标：-我们公司已经有成熟产品，可以满足客户提出需求，如果满足大多数需求，可以进行二次可发。这里可以提出加钱-多数时候不需要投标"><a href="#需要投标：-我们公司已经有成熟产品，可以满足客户提出需求，如果满足大多数需求，可以进行二次可发。这里可以提出加钱-多数时候不需要投标" class="headerlink" title="需要投标： 我们公司已经有成熟产品，可以满足客户提出需求，如果满足大多数需求，可以进行二次可发。这里可以提出加钱(多数时候不需要投标)"></a>需要投标： 我们公司已经有成熟产品，可以满足客户提出需求，如果满足大多数需求，可以进行二次可发。这里可以提出加钱(多数时候不需要投标)</h4><h5 id="具体流程："><a href="#具体流程：" class="headerlink" title="具体流程："></a>具体流程：</h5><p>携带售前产品文档和产品宣讲的PPT，为客户讲解产品，促成购买（可能先电话沟通，如果觉得你靠谱客户才会过去）</p>
<ol>
<li>学习公司产品</li>
<li>跟客户进行技术上的交流和沟通，了解客户需求</li>
<li>第一次到客户现场给客户讲解公司产品，目的有两个</li>
</ol>
<ul>
<li>第一：让客户了解我们公司，熟悉我们产品。</li>
<li>第二：获取客户需求</li>
<li>如果有了客户真实需求，我们才会给出解决方案</li>
<li>跟进客户需求制定解决方案(PPT)（销售跟进居多，协调技术支持帮助他们做产品讲解）</li>
<li>多次给客户进行讲解，吸引客户试用（可以不给钱，先试用产品）</li>
<li>试用期间一定要及时个客户答疑（这个步骤非常重要，否则客户会对我们产生意见，不会使用我们的产品）<ul>
<li>客户答疑是指在使用我们产品过程中如果客户有不懂得问题，我们要教会他如何使用</li>
<li>客户出现所有问题都要给解决(客户不会使用，部署后无法访问，试用过程中发现异常报错)</li>
<li>他们会打电话，我们必须及时解决</li>
</ul>
</li>
<li>客户满意后就会购买产品，付钱</li>
<li>售前需要跟进项目的整个实施到最后的交付</li>
</ul>
<h4 id="不需要投标：-需要给用户单独开发的项目–需要参加投标"><a href="#不需要投标：-需要给用户单独开发的项目–需要参加投标" class="headerlink" title="不需要投标： 需要给用户单独开发的项目–需要参加投标"></a>不需要投标： 需要给用户单独开发的项目–需要参加投标</h4><h5 id="具体流程：-1"><a href="#具体流程：-1" class="headerlink" title="具体流程："></a>具体流程：</h5><p>1.销售人员拜访客户，了解客户的项目基本情况，向客户介绍公司和公司的产品，与客户建立起良好的关系。<br>2.销售人员在客户招标前，引入售前技术支持人员，与客户进行技术上的交流和沟通，<br>了解客户在项目上的需求，偏好的技术构架，引导客户到本公司的技术思路上，这个过程是需要多次反复。<br>至少要做到客户对公司有一定的兴趣，愿意邀请你参加投标。<br>3.客户发招标书，售前人员根据招标书的要求，结合前期与客户交流的情况，编写投标书。<br>4.参加招投标会，进行技术、商务上的讲解和答疑。<br>5.参加商务和技术的谈判，起草项目商务合同和技术协议书。<br>6.签订合同，项目实施以及维护。</p>
<h3 id="第二题：投标常识-投标是什么？投标步骤？投标常见名词"><a href="#第二题：投标常识-投标是什么？投标步骤？投标常见名词" class="headerlink" title="第二题：投标常识 投标是什么？投标步骤？投标常见名词"></a>第二题：投标常识 投标是什么？投标步骤？投标常见名词</h3><h4 id="投标常识"><a href="#投标常识" class="headerlink" title="投标常识"></a>投标常识</h4><p>投标是指投标人按照招标人的邀请，根据招标文件要求，在全部满足的基础上，在规定的期限内报价的行为简单来说 就是有能力完成招标单位招标项目的单位或个人，拿相关资料去争取拿到项目</p>
<h5 id="投标步骤："><a href="#投标步骤：" class="headerlink" title="投标步骤："></a>投标步骤：</h5><ol>
<li>采集标讯(通过各大招标网站获取标讯信息)</li>
<li>获取招标文件（按照招标网站上的要求、提供资质等相关材料获取招标文件）</li>
<li>编写标书（需要各个部门紧密配合 提供商务资料，编写基础方案，核算报价等等）</li>
<li>参与现场投标（在指定日期，携带标书等相关材料到现场去投标）</li>
<li>中标签订合同（与招标人签订合同）</li>
<li>履约与回款 （履行合同约定和向招标方索取酬劳）</li>
</ol>
<h4 id="投标常见名词："><a href="#投标常见名词：" class="headerlink" title="投标常见名词："></a>投标常见名词：</h4><h5 id="一、投标保证金"><a href="#一、投标保证金" class="headerlink" title="一、投标保证金"></a>一、投标保证金</h5><p>指投标人向招标人出具的，以一定金额表示的投标责任担保金</p>
<h5 id="二、-中标服务费"><a href="#二、-中标服务费" class="headerlink" title="二、 中标服务费"></a>二、 中标服务费</h5><p>指招标代理机构接受招标人委托，从事编制招标文件。<br>审查投标人资格,组织投标人。<br>踏勘现场并答疑，组织开标、评标、定标以及提供招标前期咨询。<br>协调合同的签订等业务所收取的费用。</p>
<h5 id="三、履约保证金（一般大的项目需要缴纳保证金）"><a href="#三、履约保证金（一般大的项目需要缴纳保证金）" class="headerlink" title="三、履约保证金（一般大的项目需要缴纳保证金）"></a>三、履约保证金（一般大的项目需要缴纳保证金）</h5><p>就是招标人要求投标人在<code>接到中标通知书</code>后提交的保证履行合同各项义务的担保金。</p>
<h5 id="四、流标"><a href="#四、流标" class="headerlink" title="四、流标"></a>四、流标</h5><p>在政府采购活动中，由于<code>有效投标人不足三家</code>或对招标文件实质性响应的不足三家，<br>而必须重新组织招标或采取其他方式进行采购的现象。<br>五、废标、弃标</p>
<h5 id="废标："><a href="#废标：" class="headerlink" title="废标："></a>废标：</h5><p>没有对招标人的招标文件作出实质性响应，或不符合投标文件的形式要件而导致投标文件不被招标人<br>（评标委员会）接受。从而无法成功竞标，丧失订立合同的机会。</p>
<h5 id="弃标："><a href="#弃标：" class="headerlink" title="弃标："></a>弃标：</h5><p>是自动放弃中标的行为。（中标了但是超出预算或者因为其他原因不想做了）</p>
<h5 id="六、围标（发起人）、陪标（参与者）（违法行为）"><a href="#六、围标（发起人）、陪标（参与者）（违法行为）" class="headerlink" title="六、围标（发起人）、陪标（参与者）（违法行为）"></a>六、围标（发起人）、陪标（参与者）（<code>违法行为</code>）</h5><p>围标也称为串通投标。它是指几个投标人之间相互约定，一致抬高或压低投标报价进行投标，通过限制竞争，排挤其他投标人<br>使自己中标，从而谋取利益的手段和行为。</p>
<h5 id="陪标："><a href="#陪标：" class="headerlink" title="陪标："></a>陪标：</h5><p>私下和相关的人员进行交易（送钱），被内定为中标人，但是由于国家规定必须投标人要超过三家，所以就出现了陪标，陪标是违法行为</p>
<h5 id="七、标段（分包）"><a href="#七、标段（分包）" class="headerlink" title="七、标段（分包）"></a>七、标段（分包）</h5><p>把一个非常大的招标项目分为好几个部分，分别招标，每一部分就是一个标段。（例如建筑工程标中的水电活，土建等分别招标，等）</p>
<h3 id="第三题：招投标文件解读？-招标文件包含的部分？-怎样解读招标文件？"><a href="#第三题：招投标文件解读？-招标文件包含的部分？-怎样解读招标文件？" class="headerlink" title="第三题：招投标文件解读？ 招标文件包含的部分？ 怎样解读招标文件？"></a>第三题：招投标文件解读？ 招标文件包含的部分？ 怎样解读招标文件？</h3><h4 id="一-招投标文件解读？："><a href="#一-招投标文件解读？：" class="headerlink" title="一  招投标文件解读？："></a>一  招投标文件解读？：</h4><h5 id="招标文件解读主要是了解招标人的需求"><a href="#招标文件解读主要是了解招标人的需求" class="headerlink" title="招标文件解读主要是了解招标人的需求"></a>招标文件解读主要是了解招标人的需求</h5><p>1) 了解项目性质、工期计划、截标日期、各类保函要求等关键事项；<br>2) 明确投标人的责任、工作范围和报价要求；<br>3) 明确投标书编制内容及要求；<br>4) 理解项目的技术要求，以制订合理的施工方案；<br>5) 了解工程中拟采用的材料和设备，以便进行市场询价；<br>6) 发现招标文件中的错误、含糊不清或相互矛盾之处，提请招标人澄清；<br>7) 发现招标文件（合同、技术文件等）中暗藏的风险和不利隐私，以便做出合理的应 对措施；<br>8) 找出合同中含有的不合理规定或投标人要承担风险的条款，以便采取相应的对策，标书解读也是风险管理中内重要的一步，通过解读来发现和识别招标文件中存在的风险，<br>引起投标团队的重视，做好应对工作。 招标文件的解读和准确把握是编制合格的技术标书和商务标书的前提，<br>也是投标团队开始投标的第一步和关键一步，因此必须高容度重视。</p>
<h4 id="二-招标文件包含的部分？："><a href="#二-招标文件包含的部分？：" class="headerlink" title="二 招标文件包含的部分？："></a>二 招标文件包含的部分？：</h4><p>根据《政府采购货物和服务招标投标管理办法》，招标文件包括以下内容：</p>
<h5 id="一、投标邀请函（重点是投标人资格要求）"><a href="#一、投标邀请函（重点是投标人资格要求）" class="headerlink" title="一、投标邀请函（重点是投标人资格要求）"></a>一、投标邀请函（重点是投标人资格要求）</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">投标邀请书用来邀请资格预审合格的投标人，按规定时间和条件前来投标的文件。</span><br><span class="line">一般包括以下内容：</span><br><span class="line">招标人单位，招标性质，工程简况，分标情况，主要工程量，工期要求，承包人为完成本工程需提供的服务内容，</span><br><span class="line">发售招标文件的时间、地点和价格，投标文件送交的地点、份数和截止时间，</span><br><span class="line">提交投标保证金的数额和时间，开标时间、地点现场考察和召开标前会的时间、地点</span><br></pre></td></tr></table></figure>
<h5 id="二、投标人须知（重点是投标文件组成）"><a href="#二、投标人须知（重点是投标文件组成）" class="headerlink" title="二、投标人须知（重点是投标文件组成）"></a>二、投标人须知（重点是投标文件组成）</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">投标须知是指导投标人正确地进行投标报价的文件，告知他们所应遵循的各项规定，</span><br><span class="line">一般包括以下内容：</span><br><span class="line">项目或工程的简述，资金来源，承包方式，资格要求，组织投标人到工程现场勘察和召开标前会解答疑难问题的时间、地点及有关事项，</span><br><span class="line">投标人应承担编制和递交投标文件所涉及的一切费用 ，以及考察施工现场、参加标前会所发生的费用，</span><br><span class="line">填写投标文件的注意事项，投标文件的送达地址，截止时间，修改与撤销的注意事项，开标、评标、定标的程序</span><br></pre></td></tr></table></figure>
<h5 id="三、投标人应当提交的资格、资信证明文件；"><a href="#三、投标人应当提交的资格、资信证明文件；" class="headerlink" title="三、投标人应当提交的资格、资信证明文件；"></a>三、投标人应当提交的资格、资信证明文件；</h5><h5 id="四、投标报价要求、投标文件编制要求和投标保证金交纳方式；"><a href="#四、投标报价要求、投标文件编制要求和投标保证金交纳方式；" class="headerlink" title="四、投标报价要求、投标文件编制要求和投标保证金交纳方式；"></a>四、投标报价要求、投标文件编制要求和投标保证金交纳方式；</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">投标书的编制要求。投标书是投标供应商对其投标内容的书面声明，包括投标文件构成、投标保证金、总投标价和投标书有效期等内容。</span><br><span class="line">履约保证金。履约保证金是为了保证采购单位的利益，避免因供应商违约给采购单位带来损失。一般来说，货物采购的履约保证金为合同5-10%，工程保证金如果是提供担保书，其金额为合同价的30-50%，如果是提供银行保函，其金额为合同价的10%。</span><br></pre></td></tr></table></figure>
<h5 id="五、项目技术要求和有关说明"><a href="#五、项目技术要求和有关说明" class="headerlink" title="五、项目技术要求和有关说明"></a>五、项目技术要求和有关说明</h5><h5 id="六、评分方法与细则"><a href="#六、评分方法与细则" class="headerlink" title="六、评分方法与细则"></a>六、评分方法与细则</h5><h5 id="七、合同格式或合同条款"><a href="#七、合同格式或合同条款" class="headerlink" title="七、合同格式或合同条款"></a>七、合同格式或合同条款</h5><h5 id="八、投标文件格式（制作投标文件时一定要认真谨慎对待）"><a href="#八、投标文件格式（制作投标文件时一定要认真谨慎对待）" class="headerlink" title="八、投标文件格式（制作投标文件时一定要认真谨慎对待）"></a>八、投标文件格式（制作投标文件时一定要认真谨慎对待）</h5><h4 id="三-怎样解读招标文件？："><a href="#三-怎样解读招标文件？：" class="headerlink" title="三 怎样解读招标文件？："></a>三 怎样解读招标文件？：</h4><ol>
<li>投标人须知</li>
<li>资格条件</li>
<li>投标文件组成</li>
<li>商务部分</li>
<li>技术部分</li>
<li>价格部分</li>
<li>项目需求</li>
<li>评分标准</li>
<li>格式文件</li>
</ol>
<h5 id="商务部分解读："><a href="#商务部分解读：" class="headerlink" title="商务部分解读："></a>商务部分解读：</h5><h5 id="是证明供应商有资格参加投标，中标后有能力履行合同的文件。"><a href="#是证明供应商有资格参加投标，中标后有能力履行合同的文件。" class="headerlink" title="是证明供应商有资格参加投标，中标后有能力履行合同的文件。"></a>是证明供应商有资格参加投标，中标后有能力履行合同的文件。</h5><ol>
<li>投标函（投标申请及声明）</li>
<li>法定代表人授权委托书、法定代表人和授权委托人身份证复印件。</li>
<li>符合《中华人民共和国政府采购法》规定的资格条件证明文件。</li>
<li>采购人根据采购项目的特殊要求规定的特定条件证明文件</li>
<li>开标一览表（报价表）</li>
<li>商务条款偏离表</li>
<li>合同条款（随便看下）</li>
<li>供应商认为需要提供的其他资格证明文件和商务资料。</li>
</ol>
<h5 id="技术部分解读："><a href="#技术部分解读：" class="headerlink" title="技术部分解读："></a>技术部分解读：</h5><ol>
<li>证明供应商的产品和服务是合格的，符合要求的证明文件。</li>
<li>提供的服务如与招标文件有不符的地方，在《技术偏离表》中逐条说明。</li>
<li>应按要求提供技术资料、文件和有关证明。</li>
</ol>
]]></content>
      <categories>
        <category>售前</category>
      </categories>
  </entry>
</search>
