<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一篇文章</title>
    <url>/2020/04/21/one/</url>
    <content><![CDATA[<h2 id="hugo博客搭建"><a href="#hugo博客搭建" class="headerlink" title="hugo博客搭建"></a>hugo博客搭建</h2><h3 id="下载安装hugo"><a href="#下载安装hugo" class="headerlink" title="下载安装hugo"></a>下载安装hugo</h3><p>首先下载hugo<a href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener">hugo下载地址</a>下载好解压安装  </p>
<h3 id="hugo生成本地博客"><a href="#hugo生成本地博客" class="headerlink" title="hugo生成本地博客"></a>hugo生成本地博客</h3><p>在hugo文件下cmd打开控制台，然后输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo new site hugo_blog（自己定义博客名）</span><br></pre></td></tr></table></figure>
<p>然后切换到生成的hugo_blog(博客的根目录)进行下一步操作</p>
<h3 id="设置博客主题"><a href="#设置博客主题" class="headerlink" title="设置博客主题"></a>设置博客主题</h3><p><a href="https://themes.gohugo.io/" target="_blank" rel="noopener">hugo主题下载地址</a>在hugo_blog目录下的themes执行git clone (主题的git仓库地址)<br>新下载的主题就存放到hugo_blog目录下的themes文件夹下</p>
<h4 id="新建文章及本地启动博客"><a href="#新建文章及本地启动博客" class="headerlink" title="新建文章及本地启动博客"></a>新建文章及本地启动博客</h4><p>在博客根目录cmd进入控制台输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo new day01.md</span><br></pre></td></tr></table></figure>
<p>创建新的文档，写入内容<br>本地启动，输入启动命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo server</span><br></pre></td></tr></table></figure>
<p>复制生成的本地网址<a href="http://localhost:1313/到浏览器中，查看站点是否运行成功" target="_blank" rel="noopener">http://localhost:1313/到浏览器中，查看站点是否运行成功</a><br>注意：每次修改完md文件中的内容后，需要重新在cmd中输入命令hugo server    </p>
<h3 id="将博客部署到服务器"><a href="#将博客部署到服务器" class="headerlink" title="将博客部署到服务器"></a>将博客部署到服务器</h3><p>打开gitee 新建一个git仓库<br>需要注意：在是否开源要选择“公开” 否则别人无法访问<br>配置config.toml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#指定主题</span><br><span class="line">theme &#x3D; &quot;(替换成你下载好的主题名)&quot;</span><br></pre></td></tr></table></figure>
<p>在博客根目录下输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo</span><br></pre></td></tr></table></figure>
<p>执行完毕后，会在hugo文件夹下自动生成一个public文件夹。<br>打开博客目录，cmd进入控制台按照git提示命令依此输入命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd public</span><br><span class="line">git init</span><br><span class="line">git add -A</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin (你的git仓库地址)</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>提交成功  </p>
<h3 id="开启码云的page服务"><a href="#开启码云的page服务" class="headerlink" title="开启码云的page服务"></a>开启码云的page服务</h3><p>点击启动即可</p>
]]></content>
  </entry>
  <entry>
    <title>第二篇文章</title>
    <url>/2020/04/22/day1/</url>
    <content><![CDATA[<h2 id="vue语法"><a href="#vue语法" class="headerlink" title="vue语法"></a>vue语法</h2><p>Vue.js是前端的主流框架之一，和angular、react.js一起，并成为前端三大主流框架   </p>
<h4 id="vue常用属性："><a href="#vue常用属性：" class="headerlink" title="vue常用属性："></a>vue常用属性：</h4><p>data: 就是vue的model，是存放数据的，属性值是一个对象或者是一个函数，在组件中的data是一个函数<br>methods: 是vue中的事件方法  </p>
<h4 id="Vue的基础语法介绍"><a href="#Vue的基础语法介绍" class="headerlink" title="Vue的基础语法介绍"></a>Vue的基础语法介绍</h4><ul>
<li>v-model:主要是在表单元素的双向数据绑定中使用。比如文本框、下拉框、单选、复选、textarea等等。因为v-model是双向绑定的，<br>所以文本框输入以后，模型也会发生改变。反之模型改变了文本框也会改变。  </li>
<li>v-text：主要用于文本的渲染。</li>
<li>v-show：控制显示隐藏。不用艺v-if，使用v-show的情况下，dom是存在的。v-show通过指定CSS样式给元素添加display block或者display none进行控制。  </li>
<li>v-if：控制显示隐藏。如果if不成立，则整个dom不进行渲染，即不存在。  </li>
<li>v-bind：绑定属性。给一个dom元素添加属性。比如：在做图片的渲染过程中，如果图片的src地址是动态的，那么就可以利用v-bind去绑定src属性来实现src的赋值。  </li>
<li>v-for：循环。主要用于表格</li><li> 标签，去循环一个数组。  </li>
<li>v-on：事件绑定。(v-on:同等于@)  </li>
<li>filter : 过滤器。格式化数据。如后台返回金额19数字。页面显示：￥19.00元。  </li>
</ul>
]]></content>
  </entry>
</search>
