<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第一篇文章</title>
    <url>/2020/04/21/one/</url>
    <content><![CDATA[<h2 id="hugo博客搭建"><a href="#hugo博客搭建" class="headerlink" title="hugo博客搭建"></a>hugo博客搭建</h2><h3 id="下载安装hugo"><a href="#下载安装hugo" class="headerlink" title="下载安装hugo"></a>下载安装hugo</h3><p>首先下载hugo<a href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener">hugo下载地址</a>下载好解压安装  </p>
<a id="more"></a>
<h3 id="hugo生成本地博客"><a href="#hugo生成本地博客" class="headerlink" title="hugo生成本地博客"></a>hugo生成本地博客</h3><p>在hugo文件下cmd打开控制台，然后输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo new site hugo_blog（自己定义博客名）</span><br></pre></td></tr></table></figure>
<p>然后切换到生成的hugo_blog(博客的根目录)进行下一步操作</p>
<h3 id="设置博客主题"><a href="#设置博客主题" class="headerlink" title="设置博客主题"></a>设置博客主题</h3><p><a href="https://themes.gohugo.io/" target="_blank" rel="noopener">hugo主题下载地址</a>在hugo_blog目录下的themes执行git clone (主题的git仓库地址)<br>新下载的主题就存放到hugo_blog目录下的themes文件夹下</p>
<h4 id="新建文章及本地启动博客"><a href="#新建文章及本地启动博客" class="headerlink" title="新建文章及本地启动博客"></a>新建文章及本地启动博客</h4><p>在博客根目录cmd进入控制台输入：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo new day01.md</span><br></pre></td></tr></table></figure>
<p>创建新的文档，写入内容<br>本地启动，输入启动命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo server</span><br></pre></td></tr></table></figure>
<p>复制生成的本地网址<a href="http://localhost:1313/到浏览器中，查看站点是否运行成功" target="_blank" rel="noopener">http://localhost:1313/到浏览器中，查看站点是否运行成功</a><br>注意：每次修改完md文件中的内容后，需要重新在cmd中输入命令hugo server    </p>
<h3 id="将博客部署到服务器"><a href="#将博客部署到服务器" class="headerlink" title="将博客部署到服务器"></a>将博客部署到服务器</h3><p>打开gitee 新建一个git仓库<br>需要注意：在是否开源要选择“公开” 否则别人无法访问<br>配置config.toml:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#指定主题</span><br><span class="line">theme &#x3D; &quot;(替换成你下载好的主题名)&quot;</span><br></pre></td></tr></table></figure>
<p>在博客根目录下输入</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hugo</span><br></pre></td></tr></table></figure>
<p>执行完毕后，会在hugo文件夹下自动生成一个public文件夹。<br>打开博客目录，cmd进入控制台按照git提示命令依此输入命令:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd public</span><br><span class="line">git init</span><br><span class="line">git add -A</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin (你的git仓库地址)</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<p>提交成功  </p>
<h3 id="开启码云的page服务"><a href="#开启码云的page服务" class="headerlink" title="开启码云的page服务"></a>开启码云的page服务</h3><p>点击启动即可</p>
]]></content>
      <categories>
        <category>hugo</category>
      </categories>
  </entry>
  <entry>
    <title>第三篇文章</title>
    <url>/2020/04/23/day2/</url>
    <content><![CDATA[<h2 id="Django后端"><a href="#Django后端" class="headerlink" title="Django后端"></a>Django后端</h2><p>后端实现简单用户名去重,注册密码md5加密  </p>
<ul>
<li><p>先导入model中创建表  *号代表所有</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from myapp.models import *</span><br></pre></td></tr></table></figure>
</li>
<li><p>再导入hash库</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#导入加密库</span><br><span class="line">import hashlib</span><br></pre></td></tr></table></figure></li>
<li><p>生成md5加密方法视图</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># md5加密方法</span><br><span class="line">def make_password(mypass):</span><br><span class="line"></span><br><span class="line">    # 生成md5对象</span><br><span class="line">    md5 &#x3D; hashlib.md5()</span><br><span class="line"></span><br><span class="line">    # 转码操作</span><br><span class="line">    mypass_utf8 &#x3D; str(mypass).encode(encoding&#x3D;&quot;utf-8&quot;)</span><br><span class="line"></span><br><span class="line">    # 加密操作</span><br><span class="line">    md5.update(mypass_utf8)</span><br><span class="line"></span><br><span class="line">    # 返回密文</span><br><span class="line">    return md5.hexdigest()</span><br></pre></td></tr></table></figure></li>
<li><p>注册视图  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 注册接口</span><br><span class="line">class Register(APIView):</span><br><span class="line">    def get(self,request):</span><br><span class="line"></span><br><span class="line">        # 接收参数</span><br><span class="line">        username &#x3D; request.GET.get(&#39;username&#39;,None)</span><br><span class="line">        password &#x3D; request.GET.get(&#39;password&#39;,None)</span><br><span class="line"></span><br><span class="line">        # 排重</span><br><span class="line">        user &#x3D; User.objects.filter(username&#x3D;username).first()</span><br><span class="line"></span><br><span class="line">        if user:</span><br><span class="line">            return Response(&#123;</span><br><span class="line">                &#39;code&#39;: 400,</span><br><span class="line">                &#39;message&#39;:&#39;用户名重复&#39;</span><br><span class="line">            &#125;)</span><br><span class="line">        # 入库操作</span><br><span class="line">        user &#x3D; User(username&#x3D;username,password&#x3D;make_password(password))</span><br><span class="line">        # 保存结果</span><br><span class="line">        user.save()</span><br><span class="line"></span><br><span class="line">        return Response(&#123;</span><br><span class="line">            &#39;code&#39;:200,</span><br><span class="line">            &#39;message&#39;:&#39;注册成功&#39;</span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>
<h2 id="Vue前端"><a href="#Vue前端" class="headerlink" title="Vue前端"></a>Vue前端</h2><p>前端使用正则判断手机号码是否合法</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">		&lt;div&gt;</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line">			&lt;div&gt;</span><br><span class="line">				&lt;table&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							用户名:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;username&quot; placeholder&#x3D;&quot;请输入用户名&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							密码:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;password&quot; v-model&#x3D;&quot;password&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							手机号:</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;input type&#x3D;&quot;text&quot; v-model&#x3D;&quot;phone&quot;&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">					&lt;tr&gt;</span><br><span class="line">						&lt;td&gt;&lt;&#x2F;td&gt;</span><br><span class="line">						&lt;td&gt;</span><br><span class="line">							&lt;Button @click&#x3D;&quot;submit&quot; color&#x3D;&quot;blue&quot;&gt;提交&lt;&#x2F;Button&gt;</span><br><span class="line">							&lt;Button @click&#x3D;&quot;reginfo&quot; color&#x3D;&quot;red&quot;&gt;重置&lt;&#x2F;Button&gt;</span><br><span class="line">						&lt;&#x2F;td&gt;											</span><br><span class="line">					&lt;&#x2F;tr&gt;</span><br><span class="line">				&lt;&#x2F;table&gt;</span><br><span class="line">			&lt;&#x2F;div&gt;</span><br><span class="line">  &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;导入组件</span><br><span class="line">import myheader from &#39;.&#x2F;myheader&#39;</span><br><span class="line">import myfooter from &#39;.&#x2F;myfooter&#39;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  data () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">	  msg: &quot;这是一个变量&quot;,</span><br><span class="line">	  &#x2F;&#x2F;表单数据</span><br><span class="line">	  username:&#39;&#39;,</span><br><span class="line">	  password:&#39;&#39;,</span><br><span class="line">	  phone:&#39;&#39;,</span><br><span class="line">	  &#x2F;&#x2F;面包屑导航变量</span><br><span class="line">	  datas:[&#123;title:&#39;首页&#39;,route:&#123;name:&#39;index&#39;&#125;&#125;,&#123;title:&#39;注册页面&#39;&#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x2F;&#x2F;注册组件标签</span><br><span class="line">  components:&#123;</span><br><span class="line">	  &#39;myheader&#39;:myheader,</span><br><span class="line">	  &#39;myfooter&#39;:myfooter,</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted:function()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;重置按钮</span><br><span class="line">	  reginfo:function()&#123;</span><br><span class="line">		  this.username &#x3D; &quot;&quot;;</span><br><span class="line">		  this.password &#x3D; &quot;&quot;;</span><br><span class="line">		  this.phone &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">	  &#125;,</span><br><span class="line"></span><br><span class="line">	  &#x2F;&#x2F;定义提交事件</span><br><span class="line">	  submit:function()&#123;</span><br><span class="line"></span><br><span class="line">		  &#x2F;&#x2F;非空验证</span><br><span class="line">		  if(this.username&#x3D;&#x3D; &#39;&#39;)&#123;</span><br><span class="line"></span><br><span class="line">			  this.$Message(&#39;您没有输入用户名&#39;)</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line">		  if(this.password&#x3D;&#x3D;&#39;&#39;)&#123;</span><br><span class="line">			  this.$Message(&#39;密码不能为空&#39;)</span><br><span class="line">			  return false</span><br><span class="line">		  &#125;</span><br><span class="line">          &#x2F;&#x2F;手机号码使用正则匹配</span><br><span class="line">		  if (!&#x2F;^((1[3,5,8][0-9])|(14[5,7])|(17[0,6,7,8])|(19[7]))\d&#123;8&#125;$&#x2F;.test(this.phone)) &#123;</span><br><span class="line">                alert(&#39;手机号格式不正确&#39;);</span><br><span class="line">                return false;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">		  &#x2F;&#x2F;请求后台接口</span><br><span class="line">		  this.axios.get(&#39;http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;register&#x2F;&#39;,&#123;params:&#123;username:this.username,password:this.password,phone:this.phone&#125;&#125;).then((result)&#x3D;&gt;&#123;</span><br><span class="line">			  console.log(result);</span><br><span class="line">        this.$Message(result.data.message)</span><br><span class="line">		  &#125;)</span><br><span class="line">	  &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;&#x2F;script&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>
<p>前端组件化操作：<br>将需要嵌套的组件导入<br><img src="https://i.loli.net/2020/04/23/HeKoOyqUE6mAMfi.png" alt></p>
</li>
</ul>
<p>然后在页面注册组件标签</p>
<p><img src="https://i.loli.net/2020/04/23/q6N8mjrD2oPbpVx.png" alt></p>
<p>最后在<template>标签里引入</template></p>
<p>面包屑导航</p>
<p><img src="https://i.loli.net/2020/04/23/DRFh5paEkucT8Gd.png" alt></p>
<p>最后定义面包屑变量</p>
<p><img src="https://i.loli.net/2020/04/23/6kiDMJXysA7Pomw.png" alt></p>
]]></content>
      <categories>
        <category>Django</category>
      </categories>
  </entry>
  <entry>
    <title>第二篇文章</title>
    <url>/2020/04/22/day1/</url>
    <content><![CDATA[<h2 id="vue语法"><a href="#vue语法" class="headerlink" title="vue语法"></a>vue语法</h2><p>Vue.js是前端的主流框架之一，和angular、react.js一起，并成为前端三大主流框架   </p>
<a id="more"></a>
<h4 id="vue常用属性："><a href="#vue常用属性：" class="headerlink" title="vue常用属性："></a>vue常用属性：</h4><p>data: 就是vue的model，是存放数据的，属性值是一个对象或者是一个函数，在组件中的data是一个函数<br>methods: 是vue中的事件方法  </p>
<h4 id="Vue的基础语法介绍"><a href="#Vue的基础语法介绍" class="headerlink" title="Vue的基础语法介绍"></a>Vue的基础语法介绍</h4><ul>
<li>v-model:主要是在表单元素的双向数据绑定中使用。比如文本框、下拉框、单选、复选、textarea等等。因为v-model是双向绑定的，<br>所以文本框输入以后，模型也会发生改变。反之模型改变了文本框也会改变。  </li>
<li>v-text：主要用于文本的渲染。</li>
<li>v-show：控制显示隐藏。不用艺v-if，使用v-show的情况下，dom是存在的。v-show通过指定CSS样式给元素添加display block或者display none进行控制。  </li>
<li>v-if：控制显示隐藏。如果if不成立，则整个dom不进行渲染，即不存在。  </li>
<li>v-bind：绑定属性。给一个dom元素添加属性。比如：在做图片的渲染过程中，如果图片的src地址是动态的，那么就可以利用v-bind去绑定src属性来实现src的赋值。  </li>
<li>v-for：循环。主要用于表格</li><li> 标签，去循环一个数组。  </li>
<li>v-on：事件绑定。(v-on:同等于@)  </li>
<li>filter : 过滤器。格式化数据。如后台返回金额19数字。页面显示：￥19.00元。  </li>
</ul>
<h2 id="Django配置setting详解"><a href="#Django配置setting详解" class="headerlink" title="Django配置setting详解"></a>Django配置setting详解</h2><h4 id="项目配置文件–setting-py"><a href="#项目配置文件–setting-py" class="headerlink" title="项目配置文件–setting.py"></a>项目配置文件–setting.py</h4><p>项目的相对路径，启动服务的时候会运行这个文件所在路径的manage.py<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">BASE_DIR &#x3D; os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br></pre></td></tr></table></figure><br>安全密钥<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SECRET_KEY &#x3D; &#39;l&amp;!v_npes(!j82+x(44vt+h&amp;#ag7io2x&amp;shnf*9^8fv0d63!0r&#39;</span><br></pre></td></tr></table></figure><br>是否开启Debug</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DEBUG &#x3D; True</span><br></pre></td></tr></table></figure>
<p>允许访问的主机ip，可以用通配符*<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ALLOWED_HOSTS &#x3D; []</span><br></pre></td></tr></table></figure><br>用来注册App 前6个是django自带的应用</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">INSTALLED_APPS &#x3D; [</span><br><span class="line">    &#39;django.contrib.admin&#39;,</span><br><span class="line">    &#39;django.contrib.auth&#39;,</span><br><span class="line">    &#39;django.contrib.contenttypes&#39;,</span><br><span class="line">    &#39;django.contrib.sessions&#39;,</span><br><span class="line">    &#39;django.contrib.messages&#39;,</span><br><span class="line">    &#39;django.contrib.staticfiles&#39;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>中间件 ,需要加载的中间件。比如在请求前和响应后根据规则去执行某些代码的方法<br>前后端跨域需要在这里配置中间件<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MIDDLEWARE &#x3D; [</span><br><span class="line">    &#39;django.middleware.security.SecurityMiddleware&#39;,</span><br><span class="line">    &#39;django.contrib.sessions.middleware.SessionMiddleware&#39;,</span><br><span class="line">    &#39;django.middleware.common.CommonMiddleware&#39;,</span><br><span class="line">    &#39;django.middleware.csrf.CsrfViewMiddleware&#39;,</span><br><span class="line">    &#39;django.contrib.auth.middleware.AuthenticationMiddleware&#39;,</span><br><span class="line">    &#39;django.contrib.messages.middleware.MessageMiddleware&#39;,</span><br><span class="line">    &#39;django.middleware.clickjacking.XFrameOptionsMiddleware&#39;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><br>数据库配置 默认的数据库为sqlite,这里是mysql<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">DATABASES &#x3D; &#123;</span><br><span class="line">   &#39;default&#39;: &#123;</span><br><span class="line">          &#39;ENGINE&#39;: &#39;django.db.backends.mysql&#39;, #数据库引擎</span><br><span class="line">          &#39;NAME&#39;: &#39;md&#39;,                       #数据库名</span><br><span class="line">          &#39;USER&#39;: &#39;root&#39;,                       #用户名</span><br><span class="line">          &#39;PASSWORD&#39;: &#39;root&#39;,                   #密码</span><br><span class="line">          &#39;HOST&#39;: &#39;&#39;,                           #数据库主机，默认为localhost</span><br><span class="line">          &#39;PORT&#39;: &#39;&#39;,                           #数据库端口，MySQL默认为3306</span><br><span class="line">          &#39;OPTIONS&#39;: &#123;</span><br><span class="line">             &#39;autocommit&#39;: True,</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>数据库迁移</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">生成迁移文件</span><br><span class="line">python manage.py makemigrations</span><br><span class="line"></span><br><span class="line">数据库文件生成</span><br><span class="line">python manage.py migrate </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">运行</span><br><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure>

<p>语言设置 默认英语， 中文是zh-hans<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">LANGUAGE_CODE &#x3D; &#39;en-us&#39;</span><br></pre></td></tr></table></figure><br>时区设置，中国的是：Asia/Shanghai<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">TIME_ZONE &#x3D; &#39;UTC&#39;</span><br></pre></td></tr></table></figure><br>静态文件路径<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">STATIC_URL &#x3D; &#39;&#x2F;static&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">STATICFILES_DIRS&#x3D;[</span><br><span class="line">     os.path.join(BASE_DIR,&#39;static&#39;)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">#定义上传文件夹的路径</span><br><span class="line">UPLOAD_ROOT &#x3D; os.path.join(BASE_DIR,&#39;static&#x2F;upload&#39;)</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>djang、vue</category>
      </categories>
  </entry>
</search>
